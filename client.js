
function main(){
    //ler ficheiro CSV -> comma separated value
    const data = d3.csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjkn3Yt4m5xw-54vL2IOjSXBd5U2Lkb_ilVP2cP09GhJ9ag4cmuW6uQhUX0auVCdiDSJHrEwi8MhST/pub?output=csv", d3.autoType);
    var ids = []
    var idsNotOrganized = []
    var media1
    var mediaAntes
    var media2
    var mediaApos
    var width = 1300
    var height = 900
    //VIS√ÉO GERAL
    var ratingsAntes = []
    var ratingsApos = []
    var circleRadius = 12
    var colorAntes
    var cxAntes = 150
    var cyAntes
    var colorApos
    var cxApos = 350
    var cyApos
    //UDER INDIVIDUAL
    var ratingAntes
    var ratingApos
    var colorUserAntes
    var cx1 = 130
    var cx2 = 330
    var yUserAntes
    var colorUserApos
    var yUserApos

    var times = []

    var caminho = "M513.127319,251.105988"
	+ "C515.114624,249.986328 516.473145,248.383224 518.822083,248.189728 "
	+ "C519.620667,251.466385 517.205933,252.383011 515.403625,253.638000 "
    + "	C505.029175,260.861938 493.366791,265.210938 481.418457,268.979370 "
	+ "C459.799255,275.797974 437.850067,281.361511 415.438049,284.643402 "
	+ "C400.019104,286.901276 384.552673,288.868774 368.892609,289.614136 "
	+ "C355.582947,290.247589 342.329102,291.310608 329.012909,290.378204 "
	+ "C306.123383,288.775482 283.205261,287.637024 260.339661,285.614960 "
	+ "C243.785110,284.150970 227.160614,283.491760 210.574493,282.367401 "
	+ "C188.356201,280.861206 166.147781,279.209412 143.929474,277.703339 "
	+ "C130.170776,276.770660 116.398087,276.045380 102.638023,275.131531 "
	+ "C84.728249,273.942078 66.828720,272.595001 48.915188,271.468445 "
	+ "C45.381828,271.246216 44.568409,269.914856 44.810539,266.459106 "
	+ "C45.902237,250.878006 46.598175,235.269379 47.652386,219.685272 "
	+ "C47.859478,216.623871 46.130863,214.185547 46.821873,210.683289 "
	+ "C49.629566,196.453140 50.407429,181.935059 51.085384,167.425125 "
	+ "C51.946079,149.003922 53.668110,130.617172 54.252369,112.191284 "
	+ "C54.547482,102.884232 55.683800,93.643257 55.731701,84.341110 "
	+ "C55.753483,80.111267 57.036602,76.372581 59.265457,72.607719 "
	+ "C62.070808,75.837059 68.900192,76.916901 72.401085,75.137367 "
	+ "C73.535088,74.560951 74.554726,73.728325 74.177757,72.460541 "
	+ "C72.764877,67.708939 76.044266,67.645638 79.109558,67.326591 "
	+ "C85.836449,66.626434 92.565361,65.945747 99.731117,65.212318 "
	+ "C99.541763,71.910233 103.414764,72.288292 108.292587,71.732475" 
	+ "C124.487663,69.887100 140.742996,68.724663 157.022568,67.937485" 
	+ "C166.329269,67.487480 175.641739,67.155708 184.952255,66.786644 "
	+ "C189.389999,66.610733 193.770996,66.361900 195.247360,61.110844 "
	+ "C200.943054,62.363228 200.943054,62.363228 204.963715,60.614113 "
	+ "C206.461731,67.289177 211.810654,65.740723 216.515961,65.750633 "
	+ "C232.681946,65.784676 248.848495,65.725838 265.013641,65.853249 "
	+ "C268.997437,65.884644 271.964630,64.982643 272.646698,60.559540 "
	+ "C273.019989,58.138901 274.756287,57.924290 276.698334,57.806522 "
	+ "C280.357391,57.584629 283.983368,58.722244 287.660980,57.971050 "
	+ "C289.059601,57.685371 289.658691,58.649170 290.113525,59.885567 "
	+ "C292.328125,65.905731 296.569305,68.299500 302.938812,67.228264 "
	+ "C303.759705,67.090202 304.578247,66.925842 305.404633,66.834801 "
	+ "C315.539978,65.718056 317.890381,68.087975 315.838379,78.227402 "
	+ "C315.030945,82.217186 315.648315,83.934502 319.929504,84.750275 "
	+ "C334.792297,87.582413 349.799957,89.518745 364.631531,92.591125 "
	+ "C393.498474,98.570969 421.133423,107.939537 447.515594,121.055138" 
	+ "C448.857819,121.722404 450.168884,122.453880 451.521851,123.097862" 
	+ "C458.654602,126.492920 458.726837,126.548790 464.234741,120.431984 "
	+ "C466.241180,118.203796 468.025665,118.847054 469.885559,120.254723 "
	+ "C471.837463,121.732033 474.992859,122.290932 473.610870,126.193779 "
	+ "C471.126587,133.209763 471.389404,133.558594 477.448303,137.504333 "
	+ "C481.913818,140.412369 486.434296,143.243439 490.797943,146.297928 "
	+ "C493.921722,148.484558 496.913300,148.518982 499.211029,145.606689 "
	+ "C501.647583,142.518448 503.590240,142.771866 506.099915,145.300659 "
	+ "C507.948212,147.163010 510.570099,148.214661 511.928680,150.717590 "
	+ "C511.506989,153.018326 508.990662,153.693420 508.144836,155.796921 "
	+ "C507.078552,158.448761 508.030914,160.024612 510.066986,161.221878 "
	+ "C512.712769,162.777634 513.639160,160.869781 514.235291,158.777161 "
	+ "C512.712769,162.777634 513.639160,160.869781 514.235291,158.777161 "
	+ "C512.712769,162.777634 513.639160,160.869781 514.235291,158.777161 "
	+ "C512.712769,162.777634 513.639160,160.869781 514.235291,158.777161 "
	+ "C512.712769,162.777634 513.639160,160.869781 514.235291,158.777161 "
	+ "C512.712769,162.777634 513.639160,160.869781 514.235291,158.777161 "
	+ "C515.658264,153.782303 520.720215,151.967422 523.511414,148.131744 "
	+ "C524.901855,146.221085 526.868469,147.352097 528.272949,148.707901 "
	+ "C529.741150,150.125320 532.746521,151.518555 530.975159,153.826736 "
	+ "C527.301575,158.613800 524.687073,164.461990 518.821716,167.369705 "
	+ "C518.726257,169.677689 520.130188,171.334351 521.323303,173.139435 "
	+ "C527.923340,183.124496 531.449219,193.998032 530.586609,206.087921 "
	+ "C530.371277,209.106277 530.335388,211.928253 536.311707,210.996323 "
	+ "C530.674194,218.721481 521.505920,221.411636 517.926636,230.222534 "
	+ "C524.141602,229.727127 530.081177,228.498749 536.353760,228.700653 "
	+ "C536.132996,231.920624 535.118835,233.462143 531.918335,234.463730 "
	+ "C519.197815,238.444626 506.233246,241.384689 493.273743,244.387619 "
	+ "C491.334198,244.837021 489.454803,245.554413 487.559540,246.183929 "
	+ "C485.933167,246.724121 484.996216,247.823883 485.392365,249.586227 "
	+ "C485.819763,251.487762 487.207245,251.742142 488.882904,251.311661 "
	+ "C489.987488,251.027878 491.131989,250.500778 492.194000,251.645508 "
	+ "C492.688080,254.123093 490.567963,254.094894 489.156036,254.608475 "
	+ "C463.556610,263.920166 437.155457,270.038574 410.285614,274.232239 "
	+ "C384.730591,278.220642 358.985840,279.820618 333.156738,279.174835 "
	+ "C321.876709,278.892822 310.597107,277.660583 299.327850,276.785065 "
	+ "C287.413757,275.859467 275.465179,275.013855 263.515991,274.396118 "
	+ "C260.358856,274.232880 257.072632,274.525543 255.043289,270.719086 "
	+ "C252.617996,273.627930 249.512863,273.804260 246.614746,273.208618 "
	+ "C239.646469,271.776398 232.506989,272.421112 225.449738,271.333435 "
	+ "C221.799332,270.770813 217.381058,269.005859 212.925720,270.524292 "
	+ "C208.985428,271.867249 207.270203,269.709991 207.568390,265.395935 "
	+ "C207.882202,260.855835 208.145447,256.312225 208.424759,251.866470 "
	+ "C205.919189,251.333038 205.289108,252.620621 205.082260,253.927704 "
	+ "C204.667206,256.550293 204.338531,259.209076 204.273209,261.860260 "
	+ "C204.076126,269.861420 202.913986,270.677185 195.150085,269.930969 "
	+ "C183.729858,268.833374 172.273621,268.049774 160.816406,267.437683 "
	+ "C157.668533,267.269501 155.324844,266.690002 154.192078,261.902222 "
	+ "C152.797226,267.195862 149.776291,266.867584 146.738663,266.619141 "
	+ "C119.226501,264.369080 91.610939,263.507782 64.156380,260.476074 "
	+ "C63.166748,260.366760 62.143280,260.283142 61.164139,260.409271 "
	+ "C57.338966,260.901917 56.541786,258.859253 56.889187,255.612503 "
	+ "C57.207569,252.636932 57.394226,249.646088 57.585239,246.658554 "
	+ "C57.684246,245.110092 57.668629,243.528366 55.544186,243.339478 "
	+ "C53.582478,243.165085 51.809391,243.417831 51.317429,245.786407 "
	+ "C49.916965,252.528931 50.324371,259.397491 50.001427,266.210510 "
	+ "C49.894489,268.466553 51.957100,268.566101 53.657272,268.645111 "
	+ "C70.936783,269.448303 88.146454,271.253967 105.443558,271.942535 "
	+ "C120.381714,272.537201 135.273224,274.230347 150.198380,275.246521" 
	+ "C164.133530,276.195312 178.091599,276.804352 192.029343,277.718903 "
	+ "C218.891052,279.481415 245.742310,281.403503 272.604279,283.161743 "
	+ "C287.890137,284.162354 303.208252,284.720795 318.476532,285.925842 "
	+ "C338.637878,287.516998 358.793182,286.962555 378.876068,285.511017 "
	+ "C400.276886,283.964203 421.529724,280.905212 442.466492,275.907990 "
	+ "C463.530823,270.880371 484.562653,265.802429 504.190643,256.306763 "
	+ "C507.175659,254.862671 509.948334,252.979645 513.127319,251.105988 "
    var mapaGaleriaPrincipal = "M169.648361,221.742706 "
+ "C172.689560,223.467148 175.749405,225.159622 178.768539,226.921860 "
+ "C189.021317,232.906342 198.845062,239.824249 209.589661,244.726517 "
+ "C232.141510,255.015915 255.278488,263.791534 279.753662,268.816376 "
+ "C295.142517,271.975708 310.643616,274.040466 326.230865,274.556580 "
+ "C362.083435,275.743713 397.714874,273.293427 432.903290,265.753967 "
+ "C441.154968,263.985931 449.464264,262.363007 457.715210,260.649170 "
+ "C463.569672,259.433105 469.192932,256.429443 475.137970,254.851715 "
+ "C477.683411,254.176193 480.182922,253.550934 478.981689,249.927917 "
+ "C477.936829,246.776520 476.548279,244.573502 472.515503,245.685593 "
+ "C466.904510,247.232910 461.197723,248.437042 455.519653,249.734253 "
+ "C453.832428,250.119736 451.626740,251.328125 450.767365,248.892746 "
+ "C449.751434,246.013794 452.435425,245.687897 454.258575,245.208359 "
+ "C462.778503,242.967300 471.268250,240.554581 479.881958,238.740570 "
+ "C491.394165,236.316132 502.200928,232.411926 512.083008,225.925812 "
+ "C514.673218,224.225708 515.465942,222.237350 514.385315,219.642776 "
+ "C513.229858,216.868607 510.804871,215.585785 507.873169,216.318695 "
+ "C505.983521,216.791107 504.231628,217.908295 502.491608,218.869705 "
+ "C493.388092,223.899612 483.651245,227.240891 473.607269,229.760178 "
+ "C472.034576,230.154648 470.198792,230.851837 469.190979,228.846115 "
+ "C468.284668,227.042496 469.564331,226.147324 470.989716,225.375671 "
+ "C471.886505,224.890137 472.676453,224.180069 472.365295,222.997253 "
+ "C472.069092,221.871231 471.083282,221.650452 470.077301,221.397125 "
+ "C457.823090,218.311340 454.404175,213.951645 453.503967,201.470444 "
+ "C452.727539,190.705490 455.600494,180.327560 456.339081,169.731445 "
+ "C456.482513,167.674057 457.263123,165.897858 460.106842,166.163300 "
+ "C462.477631,166.384583 463.999786,164.786011 465.346313,162.927429 "
+ "C470.543610,155.753555 475.867981,154.630966 483.239777,159.497314 "
+ "C487.532837,162.331345 491.422943,165.769547 495.573456,168.828583 "
+ "C497.595734,170.319077 499.806854,170.986893 501.778473,168.648880 "
+ "C503.683136,166.390244 504.536346,164.031876 502.039612,161.599670 "
+ "C500.848389,160.439255 499.700958,159.206375 498.379211,158.211548 "
+ "C478.478851,143.233536 457.155426,130.649521 434.488800,120.332169 "
+ "C430.231201,118.394188 427.105743,119.694763 424.780548,123.559174 "
+ "C423.368164,125.906517 422.337219,128.598236 422.623657,131.145813 "
+ "C423.268372,136.880188 421.879791,142.359482 421.324158,147.937561 "
+ "C420.954468,151.648727 419.785645,155.132248 416.942261,157.759033 "
+ "C415.028748,159.526764 414.631897,161.607101 414.898926,164.098099 "
+ "C415.217377,167.068481 414.827911,170.160568 415.464935,173.040710 "
+ "C416.536194,177.884048 414.876770,183.162399 417.554779,187.611511 "
+ "C418.547607,189.260956 420.693146,190.324844 419.762329,192.650925 "
+ "C418.771851,195.126144 416.348022,195.022156 414.225372,195.153458 "
+ "C406.917725,195.605499 399.590576,195.805222 392.298218,196.423416 "
+ "C386.609375,196.905670 380.767120,196.703934 376.476105,202.059311 "
+ "C373.976410,205.179031 372.016174,203.056717 371.656006,199.754501 "
+ "C370.615570,199.853546 369.948242,199.869888 369.298615,199.985718 "
+ "C343.426483,204.598846 317.466217,208.775940 291.710815,213.968979 "
+ "C266.647034,219.022552 241.670731,220.653458 216.362076,216.381760 "
+ "C201.653244,213.899170 187.669693,209.155838 173.827393,203.833008 "
+ "C171.416428,202.905914 163.643250,206.287354 163.054062,208.456329 "
+ "C162.251404,211.411255 166.098633,219.821396 169.648361,221.742706 "
var mapaSalaOval = "M410.129669,156.644012 "
+ "C418.847717,148.256119 418.465790,141.211853 408.743958,134.118668 "
+ "C405.929626,132.065277 402.947632,130.150269 399.818451,128.634354 "
+ "C377.709076,117.923645 354.091339,112.569138 329.920532,109.260475 "
+ "C322.688568,108.270515 315.475555,107.565956 308.123596,107.362007 "
+ "C301.622742,107.181686 295.165131,105.048256 288.425598,105.268906 "
+ "C275.462555,105.693298 262.502350,105.208496 249.509399,105.954407 "
+ "C235.356964,106.766899 221.294449,107.454056 207.585373,111.377052 "
+ "C197.307098,114.318298 187.267761,117.709427 178.640244,124.388969 "
+ "C165.280365,134.732361 162.325607,148.806458 171.546738,160.381378 "
+ "C176.706970,166.858841 183.415771,171.414017 191.048950,174.739151 "
+ "C211.916931,183.829559 234.087891,185.689728 256.395813,186.591110 "
+ "C281.232635,187.594696 305.943237,185.674576 330.566925,182.527557 "
+ "C342.564026,180.994293 342.686737,180.934967 343.264069,193.225983 "
+ "C343.429565,196.749374 344.686035,197.529587 347.883881,196.908493 "
+ "C354.239563,195.674088 360.649139,194.718964 367.011230,193.515198 "
+ "C373.300903,192.325150 374.043427,190.788574 371.832397,184.717224 "
+ "C371.286316,183.217743 370.158081,182.284042 369.257599,181.109787 "
+ "C366.177856,177.093674 366.691437,175.544235 371.456207,174.091415 "
+ "C384.862030,170.003922 397.941071,165.183762 410.129669,156.644012 "
var mapaProjectRoom = "M282.148254,73.116783 "
+ "C274.774170,71.790039 267.258972,71.697731 259.836548,71.177261 "
+ "C238.024384,69.647774 216.158005,70.357506 194.324860,71.354523 "
+ "C170.738144,72.431618 147.132782,73.161705 123.596329,75.239243 "
+ "C119.122482,75.634148 115.044067,76.680916 113.493759,81.018211 "
+ "C110.673927,88.907227 104.381477,89.162529 97.726486,89.322472 "
+ "C95.243965,89.382133 92.772057,89.842499 90.293114,90.099007 "
+ "C82.775658,90.876846 78.281174,95.264702 78.214989,102.713737 "
+ "C78.070015,119.029427 78.109314,135.349106 78.302612,151.664459" 
+ "C78.399300,159.825684 82.354767,166.015091 89.568466,169.762009 "
+ "C94.870262,172.515869 100.409935,174.829865 105.916824,177.167374" 
+ "C122.928955,184.388535 137.876068,175.765656 140.889984,157.529846" 
+ "C142.246658,149.321213 141.765167,140.869095 144.349747,132.852234 "
+ "C150.898056,112.540733 166.314728,101.238586 185.037659,93.840813 "
+ "C207.430984,84.992775 230.973419,81.914459 254.935425,81.687737 "
+ "C263.095245,81.610527 271.256165,81.650299 279.416595,81.641350 "
+ "C281.755280,81.638786 283.767334,80.964417 284.613342,78.580452 "
+ "C285.347565,76.511467 285.052460,74.619698 282.148254,73.116783 "
var mapaVideoRoom = "M510.624329,201.576096 "
+ "C510.337433,199.229248 509.583099,197.042816 508.388214,195.003494 "
+ "C501.735260,183.648972 492.910522,174.153259 482.693970,166.023911 "
+ "C475.120850,159.997955 470.388824,162.214615 468.865417,171.937805 "
+ "C468.736725,172.759232 468.652954,173.604721 468.388397,174.384811 "
+ "C467.394165,177.316391 465.820709,178.240280 463.413544,175.645920 "
+ "C462.761017,174.942612 462.399261,173.830566 460.772400,174.265762 "
+ "C458.436768,176.853867 459.416107,180.415817 458.938873,183.566422 "
+ "C457.917908,190.306351 457.324982,197.090729 458.156708,203.940491 "
+ "C459.458099,214.657761 465.983185,219.149155 476.223053,216.199356 "
+ "C477.342621,215.876846 478.443878,215.491302 479.560791,215.159210 "
+ "C481.227386,214.663696 482.755920,214.977112 483.102142,216.812683 "
+ "C484.042755,221.799942 487.258057,220.826462 490.285797,219.515823 "
+ "C494.245453,217.801804 498.024017,215.673233 501.906738,213.776779 "
+ "C506.738831,211.416580 509.644379,207.620621 510.624329,201.576096 "
var caminho2 = "M122.405937,242.241241 "
+ "C62.162872,232.529373 61.907135,235.032135 61.417442,237.394775 "
+ "C64.782867,238.551727 64.368469,234.395523 66.176041,234.278198 "
+ "C68.129898,234.592285 67.238724,236.477936 68.432686,236.961792 "
+ "C69.813164,236.700714 69.379272,234.304703 71.961990,234.688568 "
+ "C71.527588,240.040253 76.023430,240.145248 79.730789,241.828598 "
+ "C85.934319,244.645340 87.968651,245.195663 90.341324,242.538086 "
+ "C89.545609,240.127884 85.181427,241.628464 85.297264,237.526886 "
+ "C88.531776,238.076233 91.564751,238.636429 94.613068,239.094604 "
+ "C96.983376,239.450867 98.453934,240.533264 97.650543,243.089447 "
+ "C96.351738,247.222000 98.485420,252.523300 93.505020,255.402466 "
+ "C93.383369,255.472809 93.176369,255.410797 93.011894,255.389542 "
+ "C89.604073,254.948837 86.196632,254.505096 82.679634,254.047714 "
+ "C82.797195,248.731216 87.966560,252.778000 89.795807,249.372757 "
+ "C83.769508,245.357086 77.205322,249.062958 71.273590,247.406570 "
+ "C70.742332,249.793320 71.109947,252.149475 68.553398,252.450134 "
+ "C66.714569,252.218964 67.413383,250.443146 66.398872,249.652481 "
+ "C63.361290,254.248383 63.096390,249.027008 61.374683,247.835876 "
+ "C59.817516,250.934052 59.278458,254.014389 61.144325,256.434265 "
+ "C63.123611,259.001190 65.602440,257.069763 67.740379,255.514557 "
+ "C70.220268,258.053741 73.342491,258.466888 76.508080,258.639008 "
+ "C85.647881,259.135925 94.797424,259.479645 103.928169,260.102814 "
+ "C106.969238,260.310333 107.669815,258.911163 107.811676,256.344574" 
+ "C108.004204,252.861404 108.388725,249.388412 108.715103,245.913330 "
+ "C108.822235,244.772598 108.798439,243.587830 110.166702,243.002945 "
+ "C112.301422,242.090469 120.634178,244.925446 122.416191,247.313202 "
+ "C119.832199,248.583344 117.553955,247.022141 115.200279,246.606262 "
+ "C113.375023,246.283768 112.027534,246.266251 111.381775,248.516769 "
+ "C108.372597,259.004150 110.417015,261.795563 120.858894,261.845734 "
+ "C124.168510,261.861603 125.420372,260.421021 125.562958,257.479279 "
+ "C125.667473,255.322784 125.560936,253.154984 125.695549,251.001419 "
+ "C125.789879,249.492310 126.143562,247.387436 127.766998,247.414917 "
+ "C131.859283,247.484207 136.062851,247.801804 139.567947,250.550491 "
+ "C138.217453,252.692734 136.865356,252.066330 135.606506,251.835907 "
+ "C128.837341,250.596878 128.102722,251.466690 128.323746,258.395599 "
+ "C128.465210,262.830200 131.493607,262.418976 134.192108,262.629364 "
+ "C141.396606,263.191071 141.321335,263.120880 142.303070,256.391907 "
+ "C142.552124,254.684921 142.007675,252.279175 144.749527,251.499939 "
+ "C146.710175,254.117279 144.893051,256.849945 145.486115,259.373810 "
+ "C145.790192,260.667725 145.518585,262.136047 147.120041,262.650452 "
+ "C148.466232,263.082855 149.641846,262.724426 150.796082,261.769440 "
+ "C153.777512,259.302734 156.776978,256.978668 156.114655,252.396332 "
+ "C155.929749,251.116928 156.310669,249.690186 158.400345,249.457626 "
+ "C160.978058,252.309387 159.020737,255.690384 159.081207,258.759735 "
+ "C159.152283,262.365479 159.447021,264.802734 164.101303,264.772888 "
+ "C168.236694,264.746368 169.680695,263.277008 169.796692,259.237518 "
+ "C169.909668,255.303467 169.634995,252.220932 164.723267,252.017181 "
+ "C163.947464,251.984985 163.803650,251.198196 163.913635,250.479370 "
+ "C172.022659,248.170776 173.218262,248.985565 173.092102,256.730225 "
+ "C173.073120,257.896149 173.087997,259.063141 173.046097,260.228119 "
+ "C172.946259,263.004303 173.985870,264.660675 177.032654,264.746826 "
+ "C178.851562,264.798248 180.655457,265.270660 182.476593,265.381348 "
+ "C184.494110,265.503967 186.204758,264.771027 186.609131,262.597839 "
+ "C189.017868,249.652679 188.417694,247.057083 175.388046,247.394089 "
+ "C175.055756,247.402679 174.717239,247.416840 174.393906,247.485855 "
+ "C172.623016,247.863785 170.766403,247.975784 170.714905,245.577438 "
+ "C170.667633,243.376465 172.634384,243.752014 174.078110,243.709671 "
+ "C179.114487,243.561920 183.974121,244.832397 188.905975,245.544601 "
+ "C191.171051,245.871674 191.505783,247.222809 191.345703,249.087891 "
+ "C191.018677,252.898148 190.612427,256.705566 190.433167,260.523285 "
+ "C190.291565,263.538330 190.716385,266.475891 194.774139,266.318756 "
+ "C198.474472,266.175415 201.670105,265.509216 201.741638,260.508545 "
+ "C201.815887,255.318146 202.378250,250.216095 195.118195,249.329285 "
+ "C195.664398,246.783752 199.377686,244.062302 195.741623,243.070099 "
+ "C190.722412,241.700439 188.056976,237.480743 183.868073,235.253693 "
+ "C176.959854,231.580887 170.186615,227.655045 163.302902,223.934998 "
+ "C160.220947,222.269485 156.834167,219.438660 154.695572,225.202042 "
+ "C154.497116,225.736847 153.312195,226.046860 152.534286,226.197266 "
+ "C150.667648,226.558121 150.131836,227.801697 150.136215,229.453262 "
+ "C150.141083,231.283936 151.387695,232.150345 152.918625,232.515915 "
+ "C156.314926,233.326935 159.780914,233.863434 163.148514,234.771408 "
+ "C165.387024,235.374939 168.169846,234.988663 169.677551,237.571472 "
+ "C165.826355,239.433807 143.902939,235.140793 140.734482,231.972427 "
+ "C141.532593,230.528870 143.089462,231.098785 144.242416,230.646774 "
+ "C146.591644,229.725769 147.423126,226.456436 145.577957,225.645355 "
+ "C144.127594,225.552109 143.921677,227.838928 142.146439,227.333893 "
+ "C141.914261,227.037872 141.439285,226.693909 141.341034,226.263885 "
+ "C140.766922,223.751160 138.929886,222.575912 136.669342,222.487457 "
+ "C133.858414,222.377457 134.317642,225.089218 133.469818,226.765167 "
+ "C132.096008,229.480835 130.305756,231.985840 128.713974,234.543442 "
+ "C133.234665,237.031418 138.049408,237.695938 142.723343,238.839432 "
+ "C145.183838,239.441376 147.769806,239.836258 146.965881,243.560455 "
+ "C146.141357,247.379959 143.734467,247.733276 140.594299,246.918488 "
+ "C134.799728,245.415009 129.005386,243.910706 122.405937,242.241241 "
+ "M58.427471,142.815125 "
+ "C58.050983,150.787247 57.762802,158.764954 57.258324,166.728958 "
+ "C57.028496,170.357147 58.105022,172.803009 61.871273,173.659927 "
+ "C62.736328,172.032440 60.180511,170.600204 61.930054,168.753220 "
+ "C62.766697,168.569611 63.873108,168.221268 65.004272,168.095535 "
+ "C72.762268,167.233246 74.243385,168.082870 77.058769,175.258255 "
+ "C77.923218,177.461395 79.373825,178.236847 81.535843,178.112030 "
+ "C84.408707,173.604614 84.077408,170.038239 79.819473,166.716293 "
+ "C75.823334,163.598587 74.443321,158.553894 74.166870,154.056473 "
+ "C73.495125,143.127930 74.213684,132.120056 73.751900,121.170303 "
+ "C73.445915,113.914635 75.435364,106.406013 72.036957,99.313736 "
+ "C67.154205,103.821579 65.528358,95.893707 61.591393,96.888069 "
+ "C60.188606,100.460075 64.881935,99.289558 65.480927,101.814438 "
+ "C60.447411,103.143173 61.012478,107.418053 60.731247,111.262909 "
+ "C59.982677,121.496918 59.267838,131.733398 58.427471,142.815125 "
+ "M153.522980,175.928650 "
+ "C149.870987,172.289062 148.052536,167.374252 144.430496,162.278702 "
+ "C141.217087,177.541122 135.613968,190.897400 129.213333,203.583923 "
+ "C134.755417,205.894928 140.462006,206.088715 145.476273,209.079269 "
+ "C151.964203,212.948730 152.093079,212.686615 154.872375,205.920120 "
+ "C156.136551,202.842331 157.651611,199.861084 158.792435,196.740814 "
+ "C160.097855,193.170425 161.971497,192.091324 165.574905,194.003220 "
+ "C168.513351,195.562286 171.679565,196.837097 176.748276,196.688507 "
+ "C169.133133,188.627853 159.890839,184.337067 153.522980,175.928650 "
+ "M401.388489,168.003387 "
+ "C393.944214,171.690018 386.209442,174.654922 378.367889,177.372131 "
+ "C374.807678,178.605820 373.454559,181.148773 374.610901,184.815475 "
+ "C375.728119,188.358109 376.675537,191.880569 381.809357,191.281631 "
+ "C390.863708,190.225327 399.953247,189.461288 409.035736,188.662399 "
+ "C411.031860,188.486832 412.938110,188.023163 413.174561,185.879700 "
+ "C414.005951,178.343018 412.940063,170.977051 411.329742,162.988525 "
+ "C407.632111,164.845627 404.841278,166.247299 401.388489,168.003387 "
+ "M149.164032,157.277451 "
+ "C151.886993,167.580887 158.566177,174.953659 166.653442,181.565536 "
+ "C169.568573,179.659103 170.841415,176.823776 172.877441,174.708649 "
+ "C175.699020,171.777420 175.382538,169.579315 172.485504,166.763977 "
+ "C166.880295,161.316818 162.599503,155.018173 162.707153,146.709976 "
+ "C162.739258,144.230850 161.328995,143.011429 159.175064,142.608490 "
+ "C156.726059,142.150360 154.231995,141.907150 151.748154,141.667725 "
+ "C148.838730,141.387283 147.497711,142.770859 147.344360,145.705597 "
+ "C147.149490,149.435104 148.010376,152.970398 149.164032,157.277451 "
+ "M308.664703,74.975510 "
+ "C303.654572,73.029930 298.588409,71.920128 293.131989,72.944412 "
+ "C290.088745,73.515701 288.286530,74.742477 288.117523,78.004005 "
+ "C287.825684,83.634903 287.409424,89.259239 287.077087,94.888199 "
+ "C286.944397,97.134911 287.185883,99.544968 289.432068,100.502586 "
+ "C294.443542,102.639153 299.814178,101.628197 305.043640,101.574875" 
+ "C305.726624,101.567909 306.874298,100.346855 306.998474,99.560486 "
+ "C308.254852,91.605492 310.398224,83.719254 308.664703,74.975510 "
+ "M172.430817,105.965378 "
+ "C163.774429,112.193550 155.572586,118.824753 151.340561,129.236984 "
+ "C154.305588,131.845001 157.847794,132.421982 160.942230,133.911026 "
+ "C163.594315,135.187225 165.273712,134.394653 166.741013,132.034668 "
+ "C171.269135,124.751762 177.919846,119.776947 185.327240,115.853004 "
+ "C188.564056,114.138359 189.054504,112.283760 187.847748,109.050385 "
+ "C184.327454,99.618073 183.716461,99.313705 175.134918,104.210396 "
+ "C174.414124,104.621681 173.731995,105.100723 172.430817,105.965378" 
+ "M199.093155,109.420212 "
+ "C199.912628,109.443962 200.812256,109.703239 201.539429,109.455772 "
+ "C211.034164,106.224632 220.916016,104.828766 230.743271,103.153168 "
+ "C235.577713,102.328880 235.666901,101.540344 234.751617,92.561539 "
+ "C234.318848,88.316040 231.515549,88.246895 228.719177,88.586617 "
+ "C220.818298,89.546478 212.930634,90.489319 205.210510,92.743332 "
+ "C192.982910,96.313370 192.468597,97.191696 199.093155,109.420212 "
+ "M281.735962,204.562561 "
+ "C291.543945,202.800400 301.577484,204.565582 311.427032,202.336975 "
+ "C317.089355,201.055801 316.297058,197.624039 316.052094,193.742325 "
+ "C315.774414,189.342712 313.162628,188.151352 309.309906,188.416504 "
+ "C300.069733,189.052444 290.832306,189.731766 281.588623,190.311356 "
+ "C278.515259,190.504044 275.840576,191.719833 276.627686,194.972198 "
+ "	C277.434387,198.305740 273.801453,204.030380 281.735962,204.562561 "
+ "M236.922989,189.079178 "
+ "C235.273743,188.905869 233.620560,188.557587 231.976044,188.594513 "
+ "C228.175583,188.679840 227.380524,191.504578 227.393799,194.461121 "
+ "C227.406357,197.259674 225.212891,201.312637 230.230347,202.088425 "
+ "C240.725433,203.711166 251.334534,204.155869 261.933441,204.351746 "
+ "C267.362305,204.452072 266.864960,200.151581 266.992615,196.483932 "
+ "C267.123108,192.735703 265.762268,190.469452 261.660614,190.302338 "
+ "C253.714417,189.978577 245.773697,189.520889 236.922989,189.079178 "
+ "M216.657364,186.710785 "
+ "C212.223862,185.133438 207.835983,182.454224 202.751450,186.643707 "
+ "C203.091156,182.723190 200.389282,181.968307 197.895813,181.034119 "
+ "C195.102509,179.987595 192.042282,179.401901 189.539658,177.886597 "
+ "C185.151581,175.229736 182.506302,176.388062 180.560684,180.756119 "
+ "C179.957291,182.110794 179.075989,183.344086 178.296341,184.617310 "
+ "C177.012665,186.713654 177.435135,188.535492 179.466476,189.730469 "
+ "C184.352219,192.604630 189.559753,194.823013 195.166183,195.725616 "
+ "C198.424438,196.250183 199.462341,194.659180 197.871536,191.579651 "
+ "C197.009811,189.911484 196.073807,188.128815 197.901031,186.063080 "
+ "C199.174225,187.989990 200.093796,189.696503 201.315735,191.148605 "
+ "C202.734177,192.834244 201.618805,195.130264 202.949707,196.765213 "
+ "C204.515167,198.688309 213.133804,200.492584 215.215973,199.322540 "
+ "C217.794266,197.873688 218.971054,190.911346 216.657364,186.710785 "
+ "M244.450165,91.021873 "
+ "C244.490921,92.344078 244.406799,93.684181 244.593399,94.985474 "
+ "C245.549194,101.650909 245.928711,101.911919 252.864380,101.786690" 
+ "C258.168579,101.690918 263.476746,101.756546 268.778503,101.597214 "
+ "C273.732208,101.448349 274.696594,99.938057 274.816132,93.503967 "
+ "C274.896210,89.193169 273.514496,86.250977 268.705170,86.373863 "
+ "C262.250336,86.538795 255.799240,86.874725 249.349319,87.193695 "
+ "C247.237701,87.298111 245.490509,88.125618 244.450165,91.021873 "
+ "M110.898369,181.470383 "
+ "C107.667526,183.691559 107.574440,188.400803 110.354263,191.272308 "
+ "C113.642967,194.669510 118.381638,195.749344 121.783051,199.133484 "
+ "C123.971443,201.310715 126.487335,199.228973 127.662422,196.688019 "
+ "C129.897995,191.853943 132.096481,186.994141 134.053391,182.043442 "
+ "C135.008194,179.627914 136.589828,177.261612 136.289047,173.725739 "
+ "C129.045929,180.990219 121.074562,183.703308 110.898369,181.470383 "
+ "M121.784721,219.731461 "
+ "C122.045479,218.417831 122.248306,217.060318 124.684616,216.736343 "
+ "C124.269615,221.617798 129.137787,218.176224 130.474442,221.083466 "
+ "C135.565216,211.934097 134.174377,208.563950 125.171303,207.905472 "
+ "C124.783562,202.613205 119.736725,202.469986 116.367760,200.367691 "
+ "C114.300148,199.077438 112.786255,199.510071 111.809921,202.096802 "
+ "C109.712372,207.654160 108.581474,213.423431 106.982422,219.389816 "
+ "C110.948418,220.425171 114.471703,221.330185 117.986084,222.268524 "
+ "C119.792007,222.750687 121.342636,222.808548 121.784721,219.731461 "
+ "M68.770325,96.612785 "
+ "C71.068474,95.863129 74.433861,97.147316 75.693619,95.274849 "
+ "C79.796753,89.176079 85.516426,86.780838 92.433479,85.714195 "
+ "C95.723152,85.206894 95.659805,81.824570 95.359718,79.248718 "
+ "C95.070427,76.765633 93.281471,76.352806 90.879440,76.871552 "
+ "C86.381493,77.842918 81.964851,78.051025 79.302971,73.082588 "
+ "C79.180115,72.853287 78.439606,72.954910 77.458687,72.841187 "
+ "C79.257278,76.813843 74.461227,79.023575 75.479424,82.736732 "
+ "C77.030937,88.394798 74.490326,90.622337 69.018631,90.655029 "
+ "C67.615784,90.663406 65.800964,90.878342 65.406708,92.722710 "
+ "C64.969139,94.769760 66.496338,95.669594 68.770325,96.612785 "
+ "M192.435669,199.194794 "
+ "C189.795425,198.194870 187.156540,197.191299 184.514481,196.196182 "
+ "C182.485016,195.431763 180.496796,195.096100 179.578232,197.695648 "
+ "C178.738571,200.071899 180.496307,201.020004 182.250061,201.706146 "
+ "C191.234894,205.221481 200.413361,208.105728 209.943314,209.724609 "
+ "C211.630997,210.011307 214.030502,210.718430 214.427948,208.124313 "
+ "C214.805878,205.657562 212.352982,205.323730 210.665253,205.037750 "
+ "C204.556213,204.002701 198.975037,201.388733 192.435669,199.194794 "
+ "M233.981308,213.575592 "
+ "C244.021301,213.410126 254.183884,214.752899 264.291168,211.847153 "
+ "C263.170746,209.063736 261.297302,209.408752 259.759064,209.436523 "
+ "C249.636383,209.619308 239.574661,208.597443 229.489014,208.049713 "
+ "C227.860794,207.961288 225.792709,207.690536 225.484329,209.916153 "
+ "C225.124771,212.511093 227.344543,212.598541 229.154633,212.884140 "
+ "C230.465790,213.091003 231.776520,213.300613 233.981308,213.575592 "
+ "M326.037323,193.063553 "
+ "C326.638367,195.740891 324.989166,199.672638 329.319641,200.356232 "
+ "C332.579742,200.870834 335.560791,199.740723 337.229675,196.473831 "
+ "C337.531525,195.882950 337.774048,195.241776 338.173981,194.724335 "
+ "C340.138489,192.182495 340.557434,189.250824 338.509857,186.923859 "
+ "C335.565125,183.577362 332.020050,186.399429 328.810730,186.966843 "
+ "C325.999237,187.463928 325.173553,189.570953 326.037323,193.063553 "
+ "M93.682007,223.913498 "
+ "C84.740234,221.964157 76.003059,218.916443 66.804688,218.344620 "
+ "C70.548866,222.125946 114.871689,233.027222 119.108650,231.298309" 
+ "C110.764282,227.965439 102.459679,226.549408 93.682007,223.913498 "
+ "M238.636002,261.831512 "
+ "C234.484085,260.135590 230.349091,258.396423 226.173203,256.761719 "
+ "C224.042404,255.927567 222.664688,256.826050 221.952103,258.942413 "
+ "C221.338379,260.765167 221.443253,262.300110 223.586624,262.900299 "
+ "C225.980453,263.570587 227.524628,265.067108 228.850769,267.151672 "
+ "C230.037460,269.017059 237.360107,269.824310 239.044281,268.344666 "
+ "C241.126389,266.515472 241.184052,264.352722 238.636002,261.831512 "
+ "M91.827660,205.215378 "
+ "C91.416138,206.989059 90.955460,208.753174 90.607773,210.539276 "
+ "C90.298904,212.125977 89.583725,214.077988 92.022118,214.537109 "
+ "C93.962204,214.902390 94.551270,213.326309 94.799911,211.762207 "
+ "C95.221802,209.108261 96.026543,207.234238 99.326996,206.894043 "
+ "C101.321518,206.688477 103.945580,197.356903 102.750488,195.710815" 
+ "C101.755600,194.340469 100.430061,193.968109 98.851357,194.966751 "
+ "C95.300346,197.213043 91.909210,199.547012 91.827660,205.215378 "
+ "M69.622215,185.462921 "
+ "C67.157005,186.696671 67.442551,188.949493 67.673546,191.070374 "
+ "C67.945244,193.564835 67.883614,196.007202 67.547676,198.499161 "
+ "C66.490341,206.342422 67.323906,207.436264 75.017075,208.542084 "
+ "C76.566513,208.764786 78.774261,209.551041 79.319992,207.421082 "
+ "C79.958656,204.928467 77.367325,205.276031 75.975830,204.813568 "
+ "C70.267052,202.916199 69.900414,202.293137 71.799561,196.645569 "
+ "C72.273392,195.236542 72.590424,193.650955 73.464622,192.522202 "
+ "C76.929703,188.048080 74.399734,186.456558 69.622215,185.462921 "
+ "M100.709122,179.873383 "
+ "C96.423393,178.218567 92.486557,175.657059 87.927658,174.790421 "
+ "C85.147003,179.344025 85.589027,180.903488 90.026047,182.778214 "
+ "C92.916328,183.999420 95.726654,185.449371 98.692589,186.437134 "
+ "C100.466507,187.027893 102.845833,189.065567 104.191811,185.873779 "
+ "C105.356216,183.112549 104.458549,181.024292 100.709122,179.873383 "
+ "M51.045887,212.181534 "
+ "C52.670349,215.595871 53.252327,219.287674 53.303181,222.983658 "
+ "C58.609154,223.763550 62.158073,219.422852 62.986343,217.289383 "
+ "C64.226036,214.096161 59.431129,210.989639 57.450497,207.695328 "
+ "C55.961491,205.218719 53.425106,206.272644 51.072361,207.671753 "
+ "C51.379059,209.034088 53.751686,210.366211 51.045887,212.181534 "
+ "M211.370453,254.345749 "
+ "C211.572800,258.152100 210.178070,262.066010 211.852646,265.957153 "
+ "C216.499863,263.885376 219.862198,261.399170 218.797745,255.829102 "
+ "C218.398605,253.740448 217.113358,252.773163 215.294861,252.098862 "
+ "C213.528534,251.443909 212.041473,251.246826 211.370453,254.345749 "
+ "M92.652107,194.414948 "
+ "C93.661369,194.641998 94.622658,194.740799 95.290497,193.017380 "
+ "C92.468254,193.103760 91.995491,191.339890 91.634712,188.987854 "
+ "C91.136131,185.737488 88.810791,184.354141 85.852684,186.084091 "
+ "C83.316994,187.567032 81.195892,189.758881 78.470512,191.980316 "
+ "C81.646530,192.749649 84.292038,193.392975 86.942802,194.013855 "
+ "C86.993111,194.025650 87.105545,193.772202 86.847572,194.173157 "
+ "C87.726273,192.150436 84.768555,191.474869 86.323860,189.658112 "
+ "C89.829475,189.055008 90.274254,192.510574 92.652107,194.414948 "
+ "M106.727852,76.782768 "
+ "C104.715836,77.520584 102.422585,76.587746 100.158699,78.000359 "
+ "C101.116211,79.854027 99.567474,81.330185 98.826118,82.942574 "
+ "C105.830528,86.067657 106.684563,85.619682 110.693810,77.041458" 
+ "C109.711327,76.154930 108.564796,76.412903 106.727852,76.782768 "
+ "M162.181915,139.934814 "
+ "C163.993210,138.011795 162.235184,137.343674 160.935883,136.753265 "
+ "C158.687027,135.731384 156.339081,134.930161 154.055435,133.981628 "
+ "C150.497391,132.503769 148.744431,133.659866 148.662567,137.657242 "
+ "C152.758438,139.824234 157.268005,139.630524 162.181915,139.934814 "
+ "M187.652405,101.441261 "
+ "C188.718369,104.208275 189.715851,107.004555 190.880234,109.729500 "
+ "C191.431656,111.019936 192.439178,111.928543 194.031357,111.212875 "
+ "C195.081146,110.740997 195.485260,109.865402 195.105026,108.782478 "
+ "C194.124008,105.988564 193.354736,103.072243 191.985931,100.476357 "
+ "C190.674927,97.990112 188.838409,97.477280 187.652405,101.441261 "
+ "M239.808197,101.610596 "
+ "C242.198608,99.675964 242.998016,92.346649 240.981873,90.241432 "
+ "C240.581192,89.823051 239.835907,89.504524 239.265167,89.527534 "
+ "C238.108337,89.574181 237.389404,90.493477 237.443268,91.529610 "
+ "C237.618408,94.899132 236.445251,98.532143 239.808197,101.610596 "
+ "M176.520111,175.121078 "
+ "C174.411255,177.023575 172.560455,179.171341 171.531128,181.819412 "
+ "C170.884613,183.482651 171.009201,185.333862 173.479385,185.286346 "
+ "C175.419556,185.249008 180.102112,176.893066 179.253342,175.099365 "
+ "C178.829208,174.203018 177.884293,174.393784 176.520111,175.121078 "
+ "M220.489777,199.675720 "
+ "C221.100784,199.838150 221.873505,200.320404 222.294693,200.107437 "
+ "C224.080154,199.204529 226.053818,191.739365 224.818573,190.242447 "
+ "C223.185196,188.263107 221.674316,189.485687 221.121063,191.165359 "
+ "C220.279663,193.719772 218.823639,196.306305 220.489777,199.675720 "
+ "M322.361847,190.382843 "
+ "C321.389709,189.486511 320.102600,188.941177 319.501007,190.398529 "
+ "C318.307831,193.289017 319.077118,196.276215 319.888702,199.152328 "
+ "C320.109802,199.935959 320.875885,200.526321 321.829712,200.401505 "
+ "C323.324982,200.205856 323.650818,199.025238 323.613220,197.830872 "
+ "C323.541107,195.539032 324.091064,193.154724 322.361847,190.382843 "
+ "M272.387268,191.939987 "
+ "C267.891785,194.104660 270.338379,198.035049 270.074799,201.251160 "
+ "C269.995026,202.225021 270.469818,203.267212 271.658295,203.398529 "
+ "C273.094635,203.557220 273.767212,202.498413 273.965088,201.332916 "
+ "C274.490356,198.239029 274.401611,195.172806 272.387268,191.939987 "
+ "M126.325394,230.440125 "
+ "C125.178123,228.229660 127.600365,226.705841 127.752136,224.664108 "
+ "C123.417229,224.931488 121.605232,228.384918 122.499710,234.184479 "
+ "C124.889259,234.530457 125.437027,232.664734 126.325394,230.440125 "
+ "M58.371460,227.429642 "
+ "C58.264431,226.983002 58.239098,226.189117 58.038113,226.141830 "
+ "C55.042248,225.436981 54.812782,228.168930 53.670750,229.765121 "
+ "C52.914688,230.821854 51.744709,232.016815 52.753693,233.277786 "
+ "C54.034771,234.878799 55.812603,234.787064 57.378689,233.901840 "
+ "C58.621670,231.889694 56.773186,229.762146 58.371460,227.429642 "
+ "M160.228516,216.960922 "
+ "C163.372208,213.132797 160.397903,211.218933 158.016052,208.900726 "
+ "C154.213287,213.884140 154.364304,214.530609 160.228516,216.960922 "
+ "M61.152809,176.911545 "
+ "C59.585674,175.933838 57.952927,175.264267 55.989426,175.775238 "
+ "C54.806561,177.625275 54.358475,179.857361 56.125076,181.121155 "
+ "C58.361065,182.720764 59.534111,180.136154 60.888699,178.852875 "
+ "C61.202621,178.555481 61.240612,177.966827 61.152809,176.911545 "
+ "M146.374435,221.360229 "
+ "C148.722534,219.964096 149.495422,218.001801 147.989395,215.645996 "
+ "C147.351044,214.647461 145.715683,214.203674 145.141968,215.535706 "
+ "C144.313583,217.459030 141.893478,219.903564 146.374435,221.360229 "
+ "M248.789124,265.631897 "
+ "C247.314087,264.984344 245.744293,263.989197 244.487335,265.838226 "
+ "C243.813354,266.829681 243.856873,268.114349 244.777069,268.980225 "
+ "C245.960480,270.093750 247.523956,270.040833 248.890884,269.456696 "
+ "C250.763672,268.656464 250.634949,267.364166 248.789124,265.631897 "
+ "M112.349998,223.876709 "
+ "C110.086319,223.488480 107.822639,223.100235 105.558960,222.711990 "
+ "C105.498474,223.129059 105.437988,223.546143 105.377502,223.963211 "
+ "C109.827576,225.173386 114.277649,226.383560 118.727730,227.593735 "
+ "C117.457420,224.880341 114.949348,225.082504 112.349998,223.876709 "
+ "M160.555191,200.691940 "
+ "C160.010361,202.110001 159.220078,203.822784 161.419815,204.301865 "
+ "C163.562408,204.768494 165.210266,203.639313 166.225266,201.275040 "
+ "C164.758743,199.456741 163.237076,198.324051 160.555191,200.691940 "
+ "M59.356407,201.786423 "
+ "C57.446980,199.650635 55.623806,199.791016 53.477993,201.999557 "
+ "C55.564835,204.058090 57.369778,204.617004 59.356407,201.786423 "
+ "M280.589966,99.841957 "
+ "C282.472778,99.627144 283.999481,98.904419 283.177063,96.704659 "
+ "C282.589539,95.133133 281.045013,95.144196 279.846344,96.022270 "
+ "C278.273560,97.174454 277.540497,98.560402 280.589966,99.841957 "
+ "M221.706970,210.838150 "
+ "C223.282837,209.156189 222.995911,207.841095 220.783310,207.252960 "
+ "C219.418762,206.890244 217.817368,207.313232 217.685349,208.869156 "
+ "C217.482361,211.261749 219.410324,211.208435 221.706970,210.838150 "


    // GRAFICO DE BEM ESTAR
    data.then(
 
        function(d){
            for(let index = 0; index < d.length; index++){
                element = d[index];
                ratingsAntes.push(element.antes);
                ratingsApos.push(element.apos);
                ids.push(element.id);
                idsNotOrganized.push(element.id);
                times.push(element.time)
            }

            var usedIds = []
            var indexes = []

            //IDENTIFICADOR DO CLIENTE DADO NA WEBPAGE
            var identificadorNumerario = 0


                //function to remove repeated users and get the most recent responses
            for(let index = 0; index < ids.length; index++){
                id = ids[index];
                
                if(!usedIds.includes(id)){
                    usedIds.push(id)
                }
                else{
                    for (let index1 = 0; index1 < ids.length; index1++){
                        if(usedIds[index1] == id){
                            usedIds[index1] = 'x'
                        }
                    }
                    usedIds.push(id)
                }


            }

         
            //GET THE INDEXES TO CONSIDER, 
            for (let index2 = 0; index2 < ids.length; index2++){
                if(usedIds[index2] != 'x'){
                    indexes.push(index2)
                }
            }
     
            //SORT THE ARRAY
            //ids.sort(function(a, b){return a - b})

            //TITULO
            var svgTitle = d3.select("#div0")
                .append("svgTitle")
                .attr("width", 800)
                .attr("height", 100)

            svgTitle.append('text')
                .text("Consultas sem Paredes:     ")
                .style("color", "#0d4148")
                .style("font-weight", 600)
                .style("font-family", "Poppins")
                .style("font-size", '30px')
       
            svgTitle.append('text')
                .text("MAAT")
                .style("color", "#6E9EA4")
                .style("font-weight", 600)
                .style("font-family", "Poppins")
                .style("font-size", '30px')

            //LEGENDA GR√ÅFICO SWB
            d3.select('#box1')
                .text("Visualiza√ß√£o da evolu√ß√£o do bem estar emocional")
                .style("color", "#0d4148")
                .style("font-weight", 800)
                .style("font-family", "Poppins")
                .style("font-size", '20px')

            //CALCULAR MEDIA ANTES
            media1 = d3.sum(ratingsAntes);
            mediaAntes = media1 / ratingsAntes.length;
            //CALCULAR MEDIA Depois
            media2 = d3.sum(ratingsApos);
            mediaApos = media2 / ratingsApos.length; 



        
            var svg = d3.select("#div2")
                .append("svg")
                .attr("width", width)
                .attr("height", height)

            

            //legenda users
            d3.select('#clientId')
                .append('text')
                .text("Por favor insira o seu identificador numer√°rio:")
                .style("color", "#6E9EA4")
                .style("font-weight", 800)
                .style("font-family", "Roboto")
                .style("font-size", '20px')



            //CORES AO LONGO DO TEMPO
            var coresAntes = [] //max 4
            var coresDepois = []

            //POSI√á√ïES AO LONGO DO TEMPO
            var posiAntes = [] //max 4
            var posiDepois = []

            //SE TIVERMOS MAIS DE 4 RATING
            //antes
            var pa1 = 0
            var pa2 = 0
            var pa3 = 0
            var pa4 = 0
            var ca1 = ''
            var ca2 = ''
            var ca3 = ''
            var ca4 = ''
            //depois
            var pd1 = 0
            var pd2 = 0
            var pd3 = 0
            var pd4 = 0
            var cd1 = ''
            var cd2 = ''
            var cd3 = ''
            var cd4 = ''

            var timesToPrint = []

            var idToConsider = 0

            //BOTAO Para obter o identificador numer√°rio
            d3.select("#identificadorNumerario").on("change", function(){

                // GRAFICO WELL BEING


                //APAGAR GRAFICO AO LONGO DO TEMPO
                d3.select("#circle1").remove()
                d3.select("#circle2").remove()
                d3.select("#circle3").remove()
                d3.select("#circle4").remove()
                d3.select("#rect1").remove()
                d3.select("#rect2").remove()
                d3.select("#rect3").remove()
                d3.select("#rect4").remove()

                //APAGAR GRAFICO ULTIMA CONSULTA
                svg.select("#circleAntes").remove()
                svg.select("#circleDepois").remove()
                d3.select("#rectuserantes").remove()
                d3.select("#rectuserdepois").remove()

                d3.select("#legendaCircle1").remove()
                d3.select("#legendaCircle2").remove()
                d3.select("#overall5").remove()
                d3.select("#overall2").remove()
                d3.select("#overall3").remove()
                d3.select("#overall4").remove()

                //METER MAPA A BRANCO
                corUserExterior = 'white'
                corUserOval = 'white'
                corUserVideo = 'white'
                corUserGaleria = 'white'
                corUserProject = 'white'

                corUserFutureExterior = 'white'
                corUserFutureOval = 'white'
                corUserFutureVideo = 'white'
                corUserFutureGaleria = 'white'
                corUserFutureProject = 'white'

                corUserVisitaExterior = 'white'
                corUserVisitaOval = 'white'
                corUserVisitaVideo = 'white'
                corUserVisitaGaleria = 'white'
                corUserVisitaProject = 'white'

                colorir()
                

                //NOVO ID
                identificadorNumerario = this.value

                var indexToGet

                for(let index = 0; index < indexes.length; index++){
                //get ratings of the selected person

                    var indexToGet
                    for(let index2 = 0; index2 < usedIds.length; index2++){
                        
                        if(identificadorNumerario == usedIds[index2]){
                            indexToGet = index2
                        }
                    }
                }
  
    
                //VERIFICAR SE O USER EXISTE
                if (usedIds.includes(identificadorNumerario)){
                    
                    idToConsider = identificadorNumerario
                    
                    ratingAntes = ratingsAntes[indexToGet]
                    ratingApos = ratingsApos[indexToGet]

                    //get all ratings by that user
                    //get the indexes of the selected id
                    var indexesForRatings = []
                    for(let index3 = 0; index3 < idsNotOrganized.length; index3++){
                        if(idsNotOrganized[index3] == idToConsider){
                            indexesForRatings.push(index3)  
                        }
                    }
                    //get all the rating given
                    var allRatingsAntesByUser = []
                    var allRatingsAposByUser = []
                    for(let index4 = 0; index4 < indexesForRatings.length; index4++){
                        allRatingsAntesByUser.push(ratingsAntes[index4])
                        allRatingsAposByUser.push(ratingsApos[index4])
                    }
                        

                    //CORES
                    //SQUARES USER INDIVIDUAL
                    if(ratingAntes >= 0 && ratingAntes < 1.5){
                        colorUserAntes = '#F60D0D';
                        yUserAntes = 372;
                    } else if (ratingAntes >= 1.5 && ratingAntes < 2.5){
                        colorUserAntes = "#FF9900";
                        yUserAntes = 307;
                    } else if (ratingAntes >= 2.5 && ratingAntes < 3.5){
                        colorUserAntes = '#F7F054';
                        yUserAntes = 242;
                    } else if (ratingAntes >= 3.5 && ratingAntes < 4.5){
                        colorUserAntes = '#72FA1E';
                        yUserAntes = 177;
                    } else if (ratingAntes >= 5){
                        colorUserAntes = '#3FD25F';
                        yUserAntes = 112;
                    }


                    if(ratingApos >= 0 && ratingApos < 1.5){
                        colorUserApos = '#F60D0D';
                        yUserApos = 372;
                    } else if (ratingApos >= 1.5 && ratingApos < 2.5){
                        colorUserApos = "#FF9900";
                        yUserApos = 307;
                    } else if (ratingApos >= 2.5 && ratingApos < 3.5){
                        colorUserApos = '#F7F054';
                        yUserApos = 242;
                    } else if (ratingApos >= 3.5 && ratingApos < 4.5){
                        colorUserApos = '#72FA1E';
                        yUserApos = 177;
                    } else if (ratingApos >= 5){
                        colorUserApos = '#3FD25F';
                        yUserApos = 112;
                    }


                    //meter a zero
                    posiAntes = []
                    posiDepois = []
                    coresAntes = []
                    coresDepois = []

                    //CORES ANTES
                    for(let indexAntes = 0; indexAntes < allRatingsAntesByUser.length; indexAntes++){
                        if(allRatingsAntesByUser[indexAntes] >= 0 && allRatingsAntesByUser[indexAntes] < 1.5){
                            coresAntes.push('#F60D0D');
                            posiAntes.push(385);
                        } else if (allRatingsAntesByUser[indexAntes] >= 1.5 && allRatingsAntesByUser[indexAntes] < 2.5){
                            coresAntes.push('#FF9900');
                            posiAntes.push(320);
                        } else if (allRatingsAntesByUser[indexAntes] >= 2.5 && allRatingsAntesByUser[indexAntes] < 3.5){
                            coresAntes.push('#F7F054');
                            posiAntes.push(255);
                        } else if (allRatingsAntesByUser[indexAntes] >= 3.5 && allRatingsAntesByUser[indexAntes] < 4.5){
                            coresAntes.push('#72FA1E');
                            posiAntes.push(190);
                        } else if (allRatingsAntesByUser[indexAntes] >= 5){
                            coresAntes.push('#3FD25F');
                            posiAntes.push(125);
                        }
                    }

                    //CORES DEPOIS
                    for(let indexDepois = 0; indexDepois < allRatingsAposByUser.length; indexDepois++){
                        if(allRatingsAposByUser[indexDepois] >= 0 && allRatingsAposByUser[indexDepois] < 1.5){
                            coresDepois.push('#F60D0D');
                            posiDepois.push(378);
                        } else if (allRatingsAposByUser[indexDepois] >= 1.5 && allRatingsAposByUser[indexDepois] < 2.5){
                            coresDepois.push('#FF9900');
                            posiDepois.push(313);
                        } else if (allRatingsAposByUser[indexDepois] >= 2.5 && allRatingsAposByUser[indexDepois] < 3.5){
                            coresDepois.push('#F7F054');
                            posiDepois.push(248);
                        } else if (allRatingsAposByUser[indexDepois] >= 3.5 && allRatingsAposByUser[indexDepois] < 4.5){
                            coresDepois.push('#72FA1E');
                            posiDepois.push(183);
                        } else if (allRatingsAposByUser[indexDepois] >= 5){
                            coresDepois.push('#3FD25F');
                            posiDepois.push(118);
                        }
                    }


                    //VER QUAL O GRUPO SELECIONADO: LINE VS CIRCLE CHAT
                    //CIRCLE CHART
                    if(d3.select("#ultima").classed("selected") == false){
                        if (usedIds.includes(identificadorNumerario)){
                            drawCircleChart()
                        }
       
                    }
                    //LINE CHART
                    else {
                        if (usedIds.includes(identificadorNumerario)){
                            drawLineChart(idToConsider)
                        }
                               
                    }  
                    
                    //MAPA


                    //VOTES FOR FUTURE

                    if(futures[indexToGet].includes('Exterior do museu')){
                        futureUserExterior = 1;
                    } else futureUserExterior = 0;
                    if(futures[indexToGet].includes('Sala Oval')){
                        futureUserOval = 1;
                    } else futureUserOval = 0;
                    if(futures[indexToGet].includes('Video Room')){
                        futureUserVideo = 1;
                    } else futureUserVideo = 0;
                    if(futures[indexToGet].includes('Galeria Principal')){
                        futureUserGaleria = 1;
                    } else futureUserGaleria = 0;
                    if(futures[indexToGet].includes('Project Room')){
                        futureUserProject = 1;
                    } else futureUserProject = 0;

                   

                    //ROOMS VISITED
                    //AND GET THE JUSTIFICATIONS

                    
                    if(visitsExterior[indexToGet] == 'Sim'){
                        visitUserExterior = 1;
                        justificationUserExterior = justificationsExterior[indexToGet]
                    } else{
                        visitUserExterior = 0;
                        justificationUserExterior = "Espa√ßo n√£o visitado"
                    } 
                    if(visitsOval[indexToGet] == 'Sim'){                                
                        visitUserOval = 1;
                        justificationUserOval = justificationsOval[indexToGet]
                    } else{
                        visitUserOval = 0;
                        justificationUserOval = "Espa√ßo n√£o visitado"
                    } 
                    if(visitsVideo[indexToGet] == 'Sim'){                                
                        visitUserVideo = 1;
                        justificationUserVideo = justificationsVideo[indexToGet]
                    } else{
                        visitUserVideo = 0;
                        justificationUserVideo = "Espa√ßo n√£o visitado"
                    } 
                    if(visitsGaleria[indexToGet] == 'Sim'){                                
                        visitUserGaleria = 1;
                        justificationUserGaleria = justificationsGaleria[indexToGet]
                    } else{
                        visitUserGaleria = 0;
                        justificationUserGaleria = "Espa√ßo n√£o visitado"
                    } 
                    if(visitsProject[indexToGet] == 'Sim'){                                
                        visitUserProject = 1;
                        justificationUserProject = justificationsProject[indexToGet]
                    } else{
                        visitUserProject = 0;
                        justificationUserProject = "Espa√ßo n√£o visitado"
                    } 


                   

                    //GET COLORS

                    idToConsider = identificadorNumerario
                    ratingUserExterior = ratingsExterior[indexToGet]
                    ratingUserOval = ratingsOval[indexToGet]
                    ratingUserVideo = ratingsVideo[indexToGet]
                    ratingUserGaleria = ratingsGaleria[indexToGet]
                    ratingUserProject = ratingsProject[indexToGet]



                    //USER INDIVIDUAL EXTERIOR
                    //CASO DE SER VAZIO
                    if(ratingUserExterior == null){
                        corUserExterior = 'white';
                    } else if(ratingUserExterior >= 0 && ratingUserExterior < 1.5){
                        corUserExterior = '#F60D0D';
                    } else if (ratingUserExterior >= 1.5 && ratingUserExterior < 2.5){
                        corUserExterior = "#FF9900";
                    } else if (ratingUserExterior >= 2.5 && ratingUserExterior < 3.5){
                        corUserExterior = '#F7F054';
                    } else if (ratingUserExterior >= 3.5 && ratingUserExterior < 4.5){
                        corUserExterior = '#72FA1E';
                    } else if (ratingUserExterior >= 5){
                        corUserExterior = '#3FD25F';
                    }

                    //USER INDIVIDUAL OVAL
                    //CASO DE SER VAZIO
                    if(ratingUserOval == null){
                        corUserOval = 'white';
                    } else if(ratingUserOval >= 0 && ratingUserOval < 1.5){
                        corUserOval = '#F60D0D';
                    } else if (ratingUserOval >= 1.5 && ratingUserOval < 2.5){
                        corUserOval = "#FF9900";
                    } else if (ratingUserOval >= 2.5 && ratingUserOval < 3.5){
                        corUserOval = '#F7F054';
                    } else if (ratingUserOval >= 3.5 && ratingUserOval < 4.5){
                        corUserOval = '#72FA1E';
                    } else if (ratingUserOval >= 5){
                        corUserOval = '#3FD25F';
                    }

                    //USER INDIVIDUAL VIDEO
                    //CASO DE SER VAZIO
                    if(ratingUserVideo == null){
                        corUserVideo = 'white';
                    } else if(ratingUserVideo >= 0 && ratingUserVideo < 1.5){
                        corUserVideo = '#F60D0D';
                    } else if (ratingUserVideo >= 1.5 && ratingUserVideo < 2.5){
                        corUserVideo = "#FF9900";
                    } else if (ratingUserVideo >= 2.5 && ratingUserVideo < 3.5){
                        corUserVideo = '#F7F054';
                    } else if (ratingUserVideo >= 3.5 && ratingUserVideo < 4.5){
                        corUserVideo = '#72FA1E';
                    } else if (ratingUserVideo >= 5){
                        corUserVideo = '#3FD25F';
                    }

                    //USER INDIVIDUAL GALERIA
                    //CASO DE SER VAZIO
                    if(ratingUserGaleria == null){
                        corUserGaleria = 'white';
                    } else if(ratingUserGaleria >= 0 && ratingUserGaleria < 1.5){
                        corUserGaleria = '#F60D0D';
                    } else if (ratingUserGaleria >= 1.5 && ratingUserGaleria < 2.5){
                        corUserGaleria = "#FF9900";
                    } else if (ratingUserGaleria >= 2.5 && ratingUserGaleria < 3.5){
                        corUserGaleria = '#F7F054';
                    } else if (ratingUserGaleria >= 3.5 && ratingUserGaleria < 4.5){
                        corUserGaleria = '#72FA1E';
                    } else if (ratingUserGaleria >= 5){
                        corUserGaleria = '#3FD25F';
                    }

                    //USER INDIVIDUAL PROJECT
                    //CASO DE SER VAZIO
                    if(ratingUserProject == null){
                        corUserProject = 'white';
                    } else if(ratingUserProject >= 0 && ratingUserProject < 1.5){
                        corUserProject = '#F60D0D';
                    } else if (ratingUserProject >= 1.5 && ratingUserProject < 2.5){
                        corUserProject = "#FF9900";
                    } else if (ratingUserProject >= 2.5 && ratingUserProject < 3.5){
                        corUserProject = '#F7F054';
                    } else if (ratingUserProject >= 3.5 && ratingUserProject < 4.5){
                        corUserProject = '#72FA1E';
                    } else if (ratingUserProject >= 5){
                        corUserProject = '#3FD25F';
                    }



                    //CORES PARA FUTURO: CONSIDERAR APENAS A MAIS ESCURA E MAIS CLARA

                    if(futureUserExterior == 1){
                        corUserFutureExterior = '#BF4E00FF';
                    } else corUserFutureExterior = '#FFE2BBFF';
                    if(futureUserOval == 1){
                        corUserFutureOval = '#BF4E00FF';
                    } else corUserFutureOval = '#FFE2BBFF';
                    if(futureUserVideo == 1){
                        corUserFutureVideo = '#BF4E00FF';
                    } else corUserFutureVideo = '#FFE2BBFF';
                    if(futureUserGaleria == 1){
                        corUserFutureGaleria = '#BF4E00FF';
                    } else corUserFutureGaleria = '#FFE2BBFF';
                    if(futureUserProject == 1){
                        corUserFutureProject = '#BF4E00FF';
                    } else corUserFutureProject = '#FFE2BBFF';
                    

                    //CORES PARA VISITA: CONSIDERAR APENAS A MAIS ESCURA E MAIS CLARA

                    
                    if(visitUserExterior == 1){
                        corUserVisitaExterior = '#1D2268FF';
                    } else corUserVisitaExterior = '#C7E2DCFF';
                    if(visitUserOval == 1){
                        corUserVisitaOval = '#1D2268FF';
                    } else corUserVisitaOval = '#C7E2DCFF';
                    if(visitUserVideo == 1){
                        corUserVisitaVideo = '#1D2268FF';
                    } else corUserVisitaVideo = '#C7E2DCFF';
                    if(visitUserGaleria == 1){
                        corUserVisitaGaleria = '#1D2268FF';
                    } else corUserVisitaGaleria = '#C7E2DCFF';
                    if(visitUserProject == 1){
                        corUserVisitaProject = '#1D2268FF';
                    } else corUserVisitaProject = '#C7E2DCFF';

                    colorir();
                }
                else{
                    //APAGAR GRAFICO AO LONGO DO TEMPO
                    d3.select("#circle1").remove()
                    d3.select("#circle2").remove()
                    d3.select("#circle3").remove()
                    d3.select("#circle4").remove()
                    d3.select("#rect1").remove()
                    d3.select("#rect2").remove()
                    d3.select("#rect3").remove()
                    d3.select("#rect4").remove()

                    //APAGAR GRAFICO ULTIMA CONSULTA
                    svg.select("#circleAntes").remove()
                    svg.select("#circleDepois").remove()
                    d3.select("#rectuserantes").remove()
                    d3.select("#rectuserdepois").remove()

                    d3.select("#legendaCircle1").remove()
                    d3.select("#legendaCircle2").remove()
                    d3.select("#overall5").remove()
                    d3.select("#overall2").remove()
                    d3.select("#overall3").remove()
                    d3.select("#overall4").remove()
                    
                }
   
            })

            svg.append('text')
                    .text("Filtros para o mapa")
                    .attr('x', 50)
                    .attr('y', 25)
                    .style("fill", "#6E9EA4")
                    .style("font-weight", 800)
                    .style("font-family", "Roboto")
                    .style("font-size", '20px')

            
            if (usedIds.includes(identificadorNumerario)){
                drawCircleChart() 
            }
              


            //BOTAO SWB ULTIMA CONSULTA
            var ultima = svg.append("g");
            ultima.append('rect')
                .attr("id", 'ultima')
                .attr('x', 60)
                .attr('y', 40)
                .attr('width', 190)
                .attr('height', 25)
                .style("fill", "#0d4148")
                .style('stroke', "black")
                .classed("selected", false)
                .on('click', function(e, d){
                    //APAGAR OS QUE ESTAVAM LA
                    d3.select("#circle1").remove()
                    d3.select("#circle2").remove()
                    d3.select("#circle3").remove()
                    d3.select("#circle4").remove()
                    d3.select("#rect1").remove()
                    d3.select("#rect2").remove()
                    d3.select("#rect3").remove()
                    d3.select("#rect4").remove()
                    
                    
       
                    //deselect as outras
                    if(d3.select("#todas").classed("selected")){
                        d3.select("#todas").classed("selected", false)
                        d3.select("#todas")
                            .style('fill', "#6E9EA4")


                    }
                    if (!d3.select(this).classed("selected") ){
                        d3.select(this).classed("selected", true)
                        d3.select(this)
                        .style('fill', "#6E9EA4")
                        d3.select("#circleAntes").remove()
                        d3.select("#circleDepois").remove()

                        d3.select("#rectuserantes").remove()
                        d3.select("#rectuserdepois").remove()

                        d3.select("#legendaCircle1").remove()
                        d3.select("#legendaCircle2").remove()
                        d3.select("#overall5").remove()
                        d3.select("#overall2").remove()
                        d3.select("#overall3").remove()
                        d3.select("#overall4").remove()

                   

                    }else{
                        d3.select(this).classed("selected", false);
                        d3.select(this)
                        .style('fill', "#0d4148")
                        if (usedIds.includes(identificadorNumerario)){
                            drawCircleChart()
                        }
                    }

                });

                ultima.append('text')
                    .text("Bem estar na √∫ltima consulta")
                    .attr('x', 80)
                    .attr('y', 55)
                    .style("fill", "white")
                    .style("font-weight", 800)
                    .style("font-family", "Roboto")
                    .style("font-size", '12px')




                //BOTAO SWB TODAS
                var todas = svg.append("g");
                todas.append('rect')
                    .attr("id", 'todas')
                    .attr('x', 280)
                    .attr('y', 40)
                    .attr('width', 190)
                    .attr('height', 25)
                    .style("fill", "#6E9EA4")
                    .style('stroke', "black")
                    .on('click', function(e, d){
                        //meter a null para limpar o gr√°fico
                        //idToConsider = null
                        //deselect as outras
                        if(!d3.select("#ultima").classed("selected")){
                            d3.select("#ultima").classed("selected", true)
                            d3.select("#ultima")
                                .style('fill', "#6E9EA4")  
                                if (usedIds.includes(identificadorNumerario)){
                                    drawLineChart(idToConsider)
                                }


                        }
                        if (!d3.select(this).classed("selected") ){

                            d3.select(this).classed("selected", true)
                            d3.select(this)
                            .style('fill', "#0d4148")
                            if (usedIds.includes(identificadorNumerario)){
                                drawLineChart(idToConsider)
                            }
                           
    
                        }else{
                            d3.select(this).classed("selected", false);
                            d3.select(this)
                            .style('fill', "#6E9EA4")
                            d3.select("#legendaLine1").remove()
                            d3.select("#legendaLine2").remove()
                            d3.select("#legendaLine3").remove()
                            d3.select("#legendaLine4").remove()
                            d3.select("#overallb").remove()
                            d3.select("#overallc").remove()
                            d3.select("#overalld").remove()
                            d3.select("#overalle").remove()
                            
    
                        }     
                    
                    });


                todas.append('text')
                    .text("Evolu√ß√£o ao longo do tempo")
                    .attr('x', 300)
                    .attr('y', 55)
                    .style("fill", "white")
                    .style("font-weight", 800)
                    .style("font-family", "Roboto")
                    .style("font-size", '12px')


        
      

            //linha dos x
            svg.append('line')
                .attr('x1', 70)
                .attr('x2', 475)
                .attr('y1', 417)
                .attr('y2', 417)
                .style("stroke", "black")
                .style("stroke-width", 2.5)
                .style("color", "#0d4148FF")
            
            
                
            //linha dos y
            svg.append('line')
                .attr('x1', 70)
                .attr('x2', 70)
                .attr('y1', 90)
                .attr('y2', 418)
                .style("stroke", "black")
                .style("stroke-width", 2.5)
                .style("color", "#0d4148")

            //caixas linha x
            svg.append('rect')
                .attr("id", id)
                .attr('x', 59)
                .attr('y', 90)
                .attr('width', 10)
                .attr('height', 65)
                .style("fill", "#3FD25F")
                .style('stroke', "black")
            svg.append('rect')
                .attr("id", id)
                .attr('x', 59)
                .attr('y', 155)
                .attr('width', 10)
                .attr('height', 65)
                .style("fill", "#72FA1E")
                .style('stroke', "black")
            svg.append('rect')
                .attr("id", id)
                .attr('x', 59)
                .attr('y', 220)
                .attr('width', 10)
                .attr('height', 65)
                .style("fill", "#F7F054")
                .style('stroke', "black")
            svg.append('rect')
                .attr("id", id)
                .attr('x', 59)
                .attr('y', 285)
                .attr('width', 10)
                .attr('height', 65)
                .style("fill", "#FF9900")
                .style('stroke', "black")
            svg.append('rect')
                .attr("id", id)
                .attr('x', 59)
                .attr('y', 350)
                .attr('width', 10)
                .attr('height', 67)
                .style("fill", "#F60D0D")
                .style('stroke', "black")


            //legenda linha y
            svg.append('text')
                .text("5")
                .attr('x', 45)
                .attr('y', 125)
                .style("font-family", "Roboto")
                .style("color", "#0d4148")

            svg.append('text')
                .text("4")
                .attr('x', 45)
                .attr('y', 190)
                .style("font-family", "Roboto")
                .style("color", "#0d4148")

            svg.append('text')
                .text("3")
                .attr('x', 45)
                .attr('y', 255)
                .style("font-family", "Roboto")
                .style("color", "#0d4148")

            svg.append('text')
                .text("2")
                .attr('x', 45)
                .attr('y', 320)
                .style("font-family", "Roboto")
                .style("color", "#0d4148")

            svg.append('text')
                .text("1")
                .attr('x', 45)
                .attr('y', 385)
                .style("font-family", "Roboto")
                .style("color", "#0d4148")

            svg.append('text')
                .attr('id', 'overalla')
                .text("Legenda")
                .attr('x', 50)
                .attr('y', 475)
                .style("fill", "#6E9EA4")
                .style("font-weight", 800)
                .style("font-family", "Roboto")
                .style("font-size", '20px')

            function drawCircleChart(){
                svg.select("#legendaLine1").remove()
                svg.select("#legendaLine2").remove()
                svg.select("#legendaLine3").remove()
                svg.select("#legendaLine4").remove()
                svg.select("#overallb").remove()
                svg.select("#overallc").remove()
                svg.select("#overalld").remove()
                svg.select("#overalle").remove()

                d3.select("#circle1").remove()
                d3.select("#circle2").remove()
                d3.select("#circle3").remove()
                d3.select("#circle4").remove()
                d3.select("#rect1").remove()
                d3.select("#rect2").remove()
                d3.select("#rect3").remove()
                d3.select("#rect4").remove()
                

                //legenda quadrados e circulos
                svg.append('text')
                    .attr('id', 'overall1')
                    .text("Legenda")
                    .attr('x', 50)
                    .attr('y', 475)
                    .style("fill", "#6E9EA4")
                    .style("font-weight", 800)
                    .style("font-family", "Roboto")
                .style("font-size", '20px')
                svg.append('circle')
                .attr('id', 'overall2')
                    .attr('cx', 70)
                    .attr('cy', 505)
                    .attr('r', 10)
                    .style("fill", "white")
                    .style('stroke', "black")
                svg.append('text')
                .attr('id', 'overall3')
                    .text("M√©dia geral de todos os utilizadores")
                    .attr('x', 85)
                    .attr('y', 510)
                    .style("font-family", "Roboto")
                    .style("fill", "#0d4148")
                svg.append('rect')
                .attr('id', 'overall4')
                    .attr('x', 360)
                    .attr('y', 495)
                    .attr('width', 17)
                    .attr('height', 17)
                    .style("fill", "white")
                    .style('stroke', "black")
                svg.append('text')
                .attr('id', 'overall5')
                    .text("Os seus valores")
                    .attr('x', 387)
                    .attr('y', 510)
                    .style("font-family", "Roboto")
                    .style("fill", "#0d4148")

                //legenda linha x
                svg.append('text')
                    .attr('id', 'legendaCircle1')
                    .text("Antes da consulta")
                    .attr('x', 90)
                    .attr('y', 440)
                    .style("font-family", "Roboto")
                    .style("fill", "#0d4148FF")

                //legenda linha x
                svg.append('text')
                    .attr('id', 'legendaCircle2')
                    .text("Ap√≥s a consulta")
                    .attr('x', 300)
                    .attr('y', 440)
                    .style("font-family", "Roboto")
                    .style("fill", "#0d4148FF")

                //CIRCLES GERAL

                if(mediaAntes >= 0 && mediaAntes < 1.5){
                    colorAntes = '#F60D0D';
                    cyAntes = 385;
                } else if (mediaAntes >= 1.5 && mediaAntes < 2.5){
                    colorAntes = "#FF9900";
                    cyAntes = 320;
                } else if (mediaAntes >= 2.5 && mediaAntes < 3.5){
                    colorAntes = '#F7F054';
                    cyAntes = 255;
                } else if (mediaAntes >= 3.5 && mediaAntes < 4.5){
                    colorAntes = '#72FA1E';
                    cyAntes = 190;
                } else if (mediaAntes >= 4.5){
                    colorAntes = '#3FD25F';
                    cyAntes = 125;
                }

                if(mediaApos >= 0 && mediaApos < 1.5){
                    colorApos = '#F60D0D';
                    cyApos = 385;
                } else if (mediaApos >= 1.5 && mediaApos < 2.5){
                    colorApos = "#FF9900";
                    cyApos = 320;
                } else if (mediaApos >= 2.5 && mediaApos < 3.5){
                    colorApos = '#F7F054';
                    cyApos = 255;
                } else if (mediaApos >= 3.5 && mediaApos < 4.5){
                    colorApos = '#72FA1E';
                    cyApos = 190;
                } else if (mediaApos >= 4.5){
                    colorApos = '#3FD25F';
                    cyApos = 125;
                }

    
                //CIRCLE ANTES GERAL
                svg.append('circle')
                    .attr('id', 'circleAntes')
                    .attr('cx', cxAntes)
                    .attr('cy', cyAntes)
                    .attr('r', circleRadius)
                    .style("fill", colorAntes)
                    .style('stroke', "black")
    
    
                //CIRCLE APOS GERAL
                svg.append('circle')
                    .attr('id', 'circleDepois')
                    .attr('cx', cxApos)
                    .attr('cy', cyApos)
                    .attr('r', circleRadius)
                    .style("fill", colorApos)
                    .style('stroke', "black")


                //SQUARES DO UTILIZADOR
                if(colorUserAntes != null){
                    //square before
                    svg.append('rect')
                    .attr("id","rectuserantes")
                    .attr('x', 137)
                    .attr('y', yUserAntes)
                    .attr('width', 25)
                    .attr('height', 25)
                    .style("fill", colorUserAntes)
                    .style('stroke', "black")
                    .attr('fill-opacity', 0.8)
                    
                    //square after
                    svg.append('rect')
                    .attr("id","rectuserdepois")
                    .attr('x', 337)
                    .attr('y', yUserApos)
                    .attr('width', 25)
                    .attr('height', 25)
                    .style("fill", colorUserApos)
                    .style('stroke', "black")
                    .attr('fill-opacity', 0.8)
                    
                }
                
            }

            

            function drawLineChart(identificadorAConsiderar){
                d3.select("#legendaLine1").remove()
                d3.select("#legendaLine2").remove()
                d3.select("#legendaLine3").remove()
                d3.select("#legendaLine4").remove()
                d3.select("#overallb").remove()
                d3.select("#overallc").remove()
                d3.select("#overalld").remove()
                d3.select("#overalle").remove()

                svg.select("#legendaCircle1").remove()
                svg.select("#legendaCircle2").remove()
                svg.select("#circleAntes").remove()
                svg.select("#circleDepois").remove()
                d3.select("#rectuserantes").remove()
                d3.select("#rectuserdepois").remove()

                svg.select("#overall1").remove()
                svg.select("#overall2").remove()
                svg.select("#overall3").remove()
                svg.select("#overall4").remove()
                svg.select("#overall5").remove()

                //legenda quadrados e circulos
                svg.append('text')
                .attr('id', 'overalla')
                .text("Legenda")
                .attr('x', 50)
                .attr('y', 475)
                .style("fill", "#6E9EA4")
                .style("font-weight", 800)
                .style("font-family", "Roboto")
                .style("font-size", '20px')
                
                svg.append('circle')
                .attr('id', 'overallb')
                    .attr('cx', 70)
                    .attr('cy', 505)
                    .attr('r', 10)
                    .style("fill", "white")
                    .style('stroke', "black")
                svg.append('text')
                .attr('id', 'overallc')
                    .text("Valores antes da consulta")
                    .attr('x', 85)
                    .attr('y', 510)
                    .style("font-family", "Roboto")
                    .style("fill", "#0d4148")
                svg.append('rect')
                .attr('id', 'overalld')
                    .attr('x', 360)
                    .attr('y', 495)
                    .attr('width', 17)
                    .attr('height', 17)
                    .style("fill", "white")
                    .style('stroke', "black")
                svg.append('text')
                .attr('id', 'overalle')
                    .text("Valores ap√≥s a consulta")
                    .attr('x', 387)
                    .attr('y', 510)
                    .style("font-family", "Roboto")
                    .style("fill", "#0d4148")


                //ver as ultimas 4 consultas
                //legenda linha x

                //Meter a zero
                idToConsider = identificadorAConsiderar
                if(usedIds.includes(identificadorAConsiderar)){
                    timesToPrint = []

                var indexesForRatings = []
                for(let index3 = 0; index3 < idsNotOrganized.length; index3++){
                    if(idsNotOrganized[index3] == idToConsider){
                        indexesForRatings.push(index3)  
                    }
                }
                for(let index4 = 0; index4 < idsNotOrganized.length; index4++){
                    if(indexesForRatings.includes(index4)){
                        timesToPrint.push(times[index4])
                    }  
                }


                //SE TIVER QUATRO OU MENOS
                if(timesToPrint.length < 5){
                    if(timesToPrint[0] != null){
                        svg.append('text')
                            .attr('id', 'legendaLine1') 
                            .text(timesToPrint[0])
                            .attr('x', 80)
                            .attr('y', 440)
                            .style("font-family", "Roboto")
                            .style("font-size", '12px')
                            .style("fill", "#0d4148FF")
                    }
                    if(timesToPrint[1] != null){
                        //legenda linha x
                        svg.append('text')
                            .attr('id', 'legendaLine2') 
                            .text(timesToPrint[1])
                            .attr('x', 160)
                            .attr('y', 460)
                            .style("font-family", "Roboto")
                            .style("font-size", '12px')
                            .style("fill", "#0d4148FF")
                    }
                    if(timesToPrint[2] != null){
                        //legenda linha x
                        svg.append('text')
                            .attr('id', 'legendaLine3')
                            .text(timesToPrint[2])
                            .attr('x', 240)
                            .attr('y', 440)
                            .style("font-family", "Roboto")
                            .style("font-size", '12px')
                            .style("fill", "#0d4148FF")
                    }
                    if(timesToPrint[3] != null){
                        //legenda linha x
                        svg.append('text')
                            .attr('id', 'legendaLine4') 
                            .text(timesToPrint[3])
                            .attr('x', 320)
                            .attr('y', 460)
                            .style("font-family", "Roboto")
                            .style("font-size", '12px')
                            .style("fill", "#0d4148FF")
                    }

                } else { 
                    if(timesToPrint[timesToPrint.length - 4]  != null){
                        svg.append('text')
                            .attr('id', 'legendaLine1') 
                            .text(timesToPrint[timesToPrint.length - 4])
                            .attr('x', 80)
                            .attr('y', 440)
                            .style("font-family", "Roboto")
                            .style("font-size", '12px')
                            .style("fill", "#0d4148FF")
                    }
                    if(timesToPrint[timesToPrint.length - 3]  != null){
                        //legenda linha x
                        svg.append('text')
                            .attr('id', 'legendaLine2') 
                            .text(timesToPrint[timesToPrint.length - 3])
                            .attr('x', 160)
                            .attr('y', 460)
                            .style("font-family", "Roboto")
                            .style("font-size", '12px')
                            .style("fill", "#0d4148FF")
                    }
                    if(timesToPrint[timesToPrint.length - 2]  != null){
                        //legenda linha x
                        svg.append('text')
                            .attr('id', 'legendaLine3')
                            .text(timesToPrint[timesToPrint.length - 2])
                            .attr('x', 240)
                            .attr('y', 440)
                            .style("font-family", "Roboto")
                            .style("font-size", '12px')
                            .style("fill", "#0d4148FF")
                    }
                    if(timesToPrint[timesToPrint.length - 1] != null){
                        //legenda linha x
                        svg.append('text')
                            .attr('id', 'legendaLine4') 
                            .text(timesToPrint[timesToPrint.length - 1])
                            .attr('x', 320)
                            .attr('y', 460)
                            .style("font-family", "Roboto")
                            .style("font-size", '12px')
                            .style("fill", "#0d4148FF")
                    }

                }
                    
                }
                
                //METER TUDO A ZERO
                pa1 = 0
                pa2 = 0
                    pa3 = 0
                    pa4 = 0
                    ca1 = ''
                    ca2 = ''
                    ca3 = ''
                    ca4 = ''
                //depois
                    pd1 = 0
                    pd2 = 0
                    pd3 = 0
                    pd4 = 0
                    cd1 = ''
                    cd2 = ''
                    cd3 = ''
                    cd4 = ''


                    
                    if(posiDepois.length > 4){
                        pd1 = posiDepois[posiDepois.length -4]
                        pd2 = posiDepois[posiDepois.length -3]
                        pd3 = posiDepois[posiDepois.length -2]
                        pd4 = posiDepois[posiDepois.length -1]
                        pa1 = posiAntes[posiAntes.length -4]
                        pa2 = posiAntes[posiAntes.length -3]
                        pa3 = posiAntes[posiAntes.length -2]
                        pa4 = posiAntes[posiAntes.length -1]

                        cd1 = coresDepois[coresDepois.length -4]
                        cd2 = coresDepois[coresDepois.length -3]
                        cd3 = coresDepois[coresDepois.length -2]
                        cd4 = coresDepois[coresDepois.length -1]
                        ca1 = coresAntes[coresAntes.length -4]
                        ca2 = coresAntes[coresAntes.length -3]
                        ca3 = coresAntes[coresAntes.length -2]
                        ca4 = coresAntes[coresAntes.length -1]
                    }
                    //MENOS DE QUATRO RATINGS
                    else{
                        pd1 = posiDepois[0]
                        pd2 = posiDepois[1]
                        pd3 = posiDepois[2]
                        pd4 = posiDepois[3]
                        pa1 = posiAntes[0]
                        pa2 = posiAntes[1]
                        pa3 = posiAntes[2]
                        pa4 = posiAntes[3]

                        cd1 = coresDepois[0]
                        cd2 = coresDepois[1]
                        cd3 = coresDepois[2]
                        cd4 = coresDepois[3]
                        ca1 = coresAntes[0]
                        ca2 = coresAntes[1]
                        ca3 = coresAntes[2]
                        ca4 = coresAntes[3]

                    }


                    
                    //SQUARES: VALORES ANTES
                    //FIRST SQUARE
                    if(pa1 != null){
                        svg.append('circle')
                        .attr('id', 'circle1')
                        .attr('cx', 133)
                        .attr('cy', pa1)
                        .attr('r', 7.5)
                        .style("fill", ca1)
                        .style('stroke', "black")
                        .attr('fill-opacity', 0.8)
                        

                    }
                

                    //SECOND SQUARE
                    if(pa2 != null){
                        svg.append('circle')
                    .attr('id', 'circle2')
                    .attr('cx', 208)
                    .attr('cy', pa2)
                    .attr('r', 7.5)
                    .style("fill", ca2)
                    .style('stroke', "black")
                    .attr('fill-opacity', 0.8)
                

                    }                            

                    //THIRD SQUARE
                    if(pa3 != null){
                        svg.append('circle')
                    .attr('id', 'circle3')
                    .attr('cx', 283)
                    .attr('cy', pa3)
                    .attr('r', 7.5)
                    .style("fill", ca3)
                    .style('stroke', "black")
                    .attr('fill-opacity', 0.8)
                    

                    }
                

                    //FIURTH SQUARE
                    if(pa4 != null) {
                        svg.append('circle')
                    .attr('id', 'circle4')
                    .attr('cx', 358)
                    .attr('cy', pa4)
                    .attr('r', 7.5)
                    .attr('width', 15)
                    .attr('height', 15)
                    .style("fill", ca4)
                    .style('stroke', "black")
                    .attr('fill-opacity', 0.8)
                    

                    }
                    

                    //CIRCLES: VALORES APOS
                    //FIRST SQUARE
                    if(pd1 != null){
                        svg.append('rect')
                    .attr("id","rect1")
                    .attr('x', 125)
                    .attr('y', pd1)
                    .attr('width', 15)
                    .attr('height', 15)
                    .style("fill", cd1)
                    .style('stroke', "black")
                    .attr('fill-opacity', 0.8)
                    

                    }
                    

                    //SECOND SQUARE
                    if(pd2 != null) {
                        svg.append('rect')
                    .attr("id","rect2")
                    .attr('x', 200)
                    .attr('y', pd2)
                    .attr('width', 15)
                    .attr('height', 15)
                    .style("fill", cd2)
                    .style('stroke', "black")
                    .attr('fill-opacity', 0.8)
                    

                    }
                    

                    //THIRD SQUARE
                    if (pd3 != null){
                        svg.append('rect')
                    .attr("id","rect3")
                    .attr('x', 275)
                    .attr('y', pd3)
                    .attr('width', 15)
                    .attr('height', 15)
                    .style("fill", cd3)
                    .style('stroke', "black")
                    .attr('fill-opacity', 0.8)
                    

                    }
                    

                    //FIURTH SQUARE
                    if(pd4 != null){
                        svg.append('rect')
                    .attr("id","rect4")
                    .attr('x', 350)
                    .attr('y', pd4)
                    .attr('width', 15)
                    .attr('height', 15)
                    .style("fill", cd4)
                    .style('stroke', "black")
                    .attr('fill-opacity', 0.8)
                    

                    }
                   
            }
                
                

                //MAPA

                //LEGENDA MAPA
                d3.select('#box2')
                    .text("Visualiza√ß√£o da informa√ß√£o relativa ao espa√ßo")
                    .style("color", "#0d4148")
                    .style("font-weight", 800)
                    .style("font-family", "Poppins")
                    .style("font-size", '20px')


               

                var ratingUserExterior = 0
                var ratingUserOval = 0
                var ratingUserVideo = 0
                var ratingUserGaleria = 0
                var ratingUserProject = 0

                
                var visitUserExterior = 0
                var visitUserOval = 0
                var visitUserVideo = 0
                var visitUserGaleria = 0
                var visitUserProject = 0

                var futureUserExterior = 0
                var futureUserOval = 0
                var futureUserVideo = 0
                var futureUserGaleria = 0
                var futureUserProject = 0

                var ratingsExterior = []
                var ratingsOval = []
                var ratingsVideo = []
                var ratingsGaleria = []
                var ratingsProject = []

                var futures = []
                var visits = []
                var visitsExterior = []
                var visitsOval = []
                var visitsVideo = []
                var visitsGaleria = []
                var visitsProject = []
                var justificationsExterior = []
                var justificationsOval = []
                var justificationsVideo = []
                var justificationsGaleria = []
                var justificationsProject = []
                
                //CONSIDERA TAMB√âM OS VALORES NULOS PARA METER MAPA BRANCO
                for(let index = 0; index < d.length; index++){
                    element = d[index];

                    //RATINGS
                    ratingsExterior.push(element.ratingExterior);
                    ratingsOval.push(element.ratingOval);
                    ratingsVideo.push(element.ratingVideo);
                    ratingsGaleria.push(element.ratingGaleria);
                    ratingsProject.push(element.ratingProject);


                    //FUTURES
                    futures.push(element.future);
                    //VISITAS
                    if( element.visitaE == 'Sim'){
                        visits.push('Exterior do museu')
                    }
                    if( element.visitaO == 'Sim'){
                        visits.push('Sala Oval')
                    }
                    if( element.visitaV == 'Sim'){
                        visits.push('Video Room')
                    }
                    if( element.visitaG == 'Sim'){
                        visits.push('Galeria Principal')
                    }
                    if( element.visitaP == 'Sim'){
                        visits.push('Project Room')
                    }
                    visitsExterior.push(element.visitaE)
                    visitsOval.push(element.visitaS)
                    visitsVideo.push(element.visitaV)
                    visitsGaleria.push(element.visitaG)
                    visitsProject.push(element.visitaP)
                    justificationsExterior.push(element.justificacaoExterior)
                    justificationsOval.push(element.justificacaoOval)
                    justificationsVideo.push(element.justificacaoVideo)
                    justificationsGaleria.push(element.justificacaoGaleria)
                    justificationsProject.push(element.justificacaoProject)
                    
    
                }

                

                //FUNCOES AUXILIARES

        

                //CORES PARA NUMERO DE PESSOAS NAS SALAS USER
                var corUserVisitaExterior = 'white'
                var corUserVisitaOval = 'white'
                var corUserVisitaVideo = 'white'
                var corUserVisitaGaleria = 'white'
                var corUserVisitaProject = 'white'

                //CORES PARA FUTURAS CONSULTAS USER
                var corUserFutureExterior = 'white'
                var corUserFutureOval = 'white'
                var corUserFutureVideo = 'white'
                var corUserFutureGaleria = 'white'
                var corUserFutureProject = 'white'

                //CORES PARA UM USER INDIVIDUAL
                var corUserExterior = 'white'
                var corUserOval = 'white'
                var corUserVideo = 'white'
                var corUserGaleria = 'white'
                var corUserProject = 'white'

                //JUSTIFICACOES DE UM USER INDIVIDUAL PARA A SALA
                var justificationUserExterior = ''
                var justificationUserOval = ''
                var justificationUserVideo = ''
                var justificationUserGaleria = ''
                var justificationUserProject = ''

            

                
                //ESCALA DE CORES GRADIENTE
                var defs = svg.append("defs");

                var linearGradientE = defs.append("linearGradient")
                    .attr("id", "linear-gradientE");

                var linearGradientV = defs.append("linearGradient")
                    .attr("id", "linear-gradientV");

                var linearGradientF = defs.append("linearGradient")
                    .attr("id", "linear-gradientF");

                //Horizontal gradient
                linearGradientE
                    .attr("x1", "0%")
                    .attr("y1", "0%")
                    .attr("x2", "100%")
                    .attr("y2", "0%");

                linearGradientV
                    .attr("x1", "0%")
                    .attr("y1", "0%")
                    .attr("x2", "100%")
                    .attr("y2", "0%");

                linearGradientF
                    .attr("x1", "0%")
                    .attr("y1", "0%")
                    .attr("x2", "100%")
                    .attr("y2", "0%");

                //COLOR SCALE EXPERIENCIA NA SALA
                var colorScaleExperiencia = d3.scaleLinear()
                    .range(["#F60D0D", "#FF9900","#F7F054","#72FA1E","#3FD25F"]);

                //COLOR SCALE VISITAS NA SALA
                var colorScaleVisita = d3.scaleLinear()
                    .range(["#C7E2DCFF", "#96E2CFFF","#669BE2FF","#4049E2FF","#1D2268FF"]);

                //COLOR SCALE FUTURO
                var colorScaleFuturo = d3.scaleLinear()
                    .range(["#FFE2BBFF", "#E2CC96FF","#E2B266FF","#E2763DFF","#BF4E00FF"]);


                //LEGENDA EXPERIENCIA NA SALA
                var legendaExperienciaMenos = 'Pior exper√™ncia'
                var legendaExperienciaMais = 'Melhor experi√™ncia'

                //LEGENDA FUTURE USER
                var legendaFutureMenosUser = 'N√£o gostaria de visitar'
                var legendaFutureMaisUser = 'Gostaria de visitar'

                var legendaVisitaMenosUser = 'N√£o visitou o local'
                var legendaVisitaMaisUser = 'Visitou o local'

                //LEGENDA INICIAL
                linearGradientE.selectAll("stop")
                    .data( colorScaleExperiencia.range() )
                    .enter().append("stop")
                    .attr("offset", function(d,i) { return i/(colorScaleExperiencia.range().length-1); })
                    .attr("stop-color", function(d) { return d; });
                //RETANGULO LEGENDA
                svg.append("rect")
                        .attr("id", 'colores')
                        .attr('x', 720)
                        .attr('y', 485)
                        .attr('width', 530)
                        .attr('height', 25)
                        .style("fill", "url(#linear-gradientE)");

                //MAPA INICIAL
                //DESENHAR MAPA
                //EXTERIOR
                svg.append('rect')
                    .attr("id", 'exterior')
                    .attr('x', 720)
                    .attr('y', 150)
                    .attr('width', 530)
                    .attr('height', 250)
                    .style("fill", 'white')
                    .style('stroke', "black")
                    .on('mouseover', function (d, i) {
                        a = parseInt(d3.select(this).attr('x')) + 320
                        b = parseInt(d3.select(this).attr('y')) + 100
                        d3.select('#tooltip')
                        .transition().duration(200)
                        .style('opacity', 1)
                        .style("left", a + "px")     
                        .style("top", b + "px")
                        .text("Exterior do museu")
                        .style("color", "#6E9EA4")
                        .style("font-family", "Roboto")
                        .style("font-size", '14px')
                        d3.select(this)
                        .transition()
                        .duration('50')
                                .attr('opacity', '.8');
                    })
                    .on('mouseout', function (d, i) {
                        d3.select('#tooltip')
                        .style('opacity', 0)
                        d3.select(this)
                        .transition()
                        .duration('50')
                        .attr('opacity', '1');
                    })



                var innerSVG = svg.append('svg')
                    .attr('x', 700)
                    .attr('y', 100)
                    .attr('width',600)
                    .attr('height',550);


                innerSVG.append("path")
                    .attr("id", 'caminho')
                    .attr('d',caminho)
                    .attr("fill", "black")
                    .raise()
                                

                innerSVG.append("path")
                    .attr("id", 'caminho2')
                    .attr('d',caminho2)
                    .attr("fill", "white")
                    .raise()

                innerSVG.append("path")
                    .attr("id", 'mapaGaleriaPrincipal')
                    .attr('d',mapaGaleriaPrincipal)
                    .attr('x', 1030)
                    .attr('y', 150)
                    .attr("fill", 'white')
                    .on('mouseover', function (d, i) {
                        a = parseInt(d3.select(this).attr('x')) + 5
                        b = parseInt(d3.select(this).attr('y')) + 100
                        d3.select('#tooltip')
                        .transition().duration(200)
                        .style('opacity', 1)
                        .style("left", a + "px")     
                        .style("top", b + "px")
                        .text("Galeria Principal")
                        .style("color", "#6E9EA4")
                        .style("font-family", "Roboto")
                        .style("font-size", '14px')
                        d3.select(this)
                        .transition()
                        .duration('50')
                                .attr('opacity', '.8');
                    })
                    .on('mouseout', function (d, i) {
                        d3.select('#tooltip')
                        .style('opacity', 0)
                        d3.select(this)
                        .transition()
                        .duration('50')
                        .attr('opacity', '1');
                    })

                innerSVG.append("path")
                .attr("id", 'mapaVideoRoom')
                    .attr('d',mapaVideoRoom)
                    .attr('x', 1030)
                    .attr('y', 150)
                    .attr("fill", 'white')
                    .on('mouseover', function (d, i) {
                        a = parseInt(d3.select(this).attr('x')) + 5
                        b = parseInt(d3.select(this).attr('y')) + 100
                        d3.select('#tooltip')
                        .transition().duration(200)
                        .style('opacity', 1)
                        .style("left", a + "px")     
                        .style("top", b + "px")
                        .text("Video Room")
                        .style("color", "#6E9EA4")
                        .style("font-family", "Roboto")
                        .style("font-size", '14px')
                        d3.select(this)
                        .transition()
                        .duration('50')
                                .attr('opacity', '.8');
                    })
                    .on('mouseout', function (d, i) {
                        d3.select('#tooltip')
                        .style('opacity', 0)
                        d3.select(this)
                        .transition()
                        .duration('50')
                        .attr('opacity', '1');
                    })

                innerSVG.append("path")
                .attr("id", 'mapaSalaOval')
                    .attr('d',mapaSalaOval)
                    .attr('x', 1030)
                    .attr('y', 150)
                    .attr("fill", 'white')
                    .on('mouseover', function (d, i) {
                        a = parseInt(d3.select(this).attr('x')) + 5
                        b = parseInt(d3.select(this).attr('y')) + 100
                        d3.select('#tooltip')
                        .transition().duration(200)
                        .style('opacity', 1)
                        .style("left", a + "px")     
                        .style("top", b + "px")
                        .text("Sala Oval")
                        .style("color", "#6E9EA4")
                        .style("font-family", "Roboto")
                        .style("font-size", '14px')
                        d3.select(this)
                        .transition()
                        .duration('50')
                                .attr('opacity', '.8');
                    })
                    .on('mouseout', function (d, i) {
                        d3.select('#tooltip')
                        .style('opacity', 0)
                        d3.select(this)
                        .transition()
                        .duration('50')
                        .attr('opacity', '1');
                    })

                innerSVG.append("path")
                .attr("id", 'mapaProjectRoom')
                    .attr('d',mapaProjectRoom)
                    .attr('x', 1030)
                    .attr('y', 150)
                    .attr("fill", 'white')
                    .on('mouseover', function (d, i) {
                        a = parseInt(d3.select(this).attr('x')) + 5
                        b = parseInt(d3.select(this).attr('y')) + 100
                        d3.select('#tooltip')
                        .transition().duration(200)
                        .style('opacity', 1)
                        .style("left", a + "px")     
                        .style("top", b + "px")
                        .text("Project Room")
                        .style("color", "#6E9EA4")
                        .style("font-family", "Roboto")
                        .style("font-size", '14px')
                        d3.select(this)
                        .transition()
                        .duration('50')
                                .attr('opacity', '.8');
                    })
                    .on('mouseout', function (d, i) {
                        d3.select('#tooltip')
                        .style('opacity', 0)
                        d3.select(this)
                        .transition()
                        .duration('50')
                        .attr('opacity', '1');
                    })

                innerSVG.raise()


                d3.select('#p3')
                        .attr("id","tooltip")
                        .attr('style', 'position: absolute; opacity: 0;')

                function colorir(){
                    if(!d3.select("#g1").classed("selected")){     
                        linearGradientE.selectAll("stop")
                        .data( colorScaleExperiencia.range() )
                        .enter().append("stop")
                        .attr("offset", function(d,i) { return i/(colorScaleExperiencia.range().length-1); })
                        .attr("stop-color", function(d) { return d; });
                        //RETANGULO LEGENDA
                        svg.append("rect")
                            .attr('x', 720)
                            .attr('y', 485)
                            .attr('width', 530)
                            .attr('height', 25)
                            .style("fill", "url(#linear-gradientE)");   

                        //DESENHAR MAPA
                        //EXTERIOR
                        svg.append('rect')
                            .attr("id", 'exterior')
                            .attr('x', 720)
                            .attr('y', 150)
                            .attr('width', 530)
                            .attr('height', 250)
                            .style("fill", corUserExterior)
                            .style('stroke', "black")
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 320
                                b = parseInt(d3.select(this).attr('y')) + 100
                                c = parseInt(d3.select(this).attr('y')) + 100
                                if(justificationUserExterior != ""){
                                    d3.select('#tooltip')
                                    .transition().duration(200)
                                    .style('opacity', 1)
                                    .style("left", a + "px")     
                                    .style("top", b + "px")
                                    .style("width", 250 + "px")
                                    .text("Exterior do museu\n" + "Justifica√ß√£o: " + justificationUserExterior)
                                    .style("color", "#6E9EA4")
                                    .style("font-family", "Roboto")
                                    .style("font-size", '14px')
                                    d3.select(this)
                                    .transition()
                                    .duration('50')
                                        .attr('opacity', '.8');

                                }
                                else{
                                    d3.select('#tooltip')
                                    .transition().duration(200)
                                    .style('opacity', 1)
                                    .style("left", a + "px")     
                                    .style("top", c + "px")
                                    .style("width", 300 + "px")
                                    .text("Exterior do museu: " + justificationUserExterior)
                                    .style("color", "#6E9EA4")
                                    .style("font-family", "Roboto")
                                    .style("font-size", '14px')
                                    d3.select(this)
                                    .transition()
                                    .style('fill', '#6E9EA4')
                                    .duration('50')
                                        .attr('opacity', '.8');
                                }
                                    
                            })
                            .on('mouseout', function (d, i) {
                                if(justificationUserExterior != ""){
                                    d3.select('#tooltip')
                                    .style('opacity', 0)
                                    d3.select(this)
                                    .transition()
                                    .duration('50')
                                    .attr('opacity', '1');
                                }
                                else{
                                    d3.select('#tooltip')
                                    .style('opacity', 0)
                                    d3.select(this)
                                    .transition()
                                    .style('fill', 'white')
                                    .duration('50')
                                    .attr('opacity', '1');
                                }
                            })

                        innerSVG.append("path")
                            .attr("id", 'mapaGaleriaPrincipal')
                            .attr('d',mapaGaleriaPrincipal)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserGaleria)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                c = parseInt(d3.select(this).attr('y')) + 100

                                if(justificationUserGaleria != ""){
                                    d3.select('#tooltip')
                                    .transition().duration(200)
                                    .style('opacity', 1)
                                    .style("left", a + "px")     
                                    .style("top", b + "px")
                                    .style("width", 250 + "px")
                                    .text("Galeria Principal\n" + "Justifica√ß√£o: " + justificationUserGaleria)
                                    .style("color", "#6E9EA4")
                                    .style("font-family", "Roboto")
                                    .style("font-size", '14px')
                                    d3.select(this)
                                    .transition()
                                    .duration('50')
                                        .attr('opacity', '.8');

                                }
                                else{
                                    d3.select('#tooltip')
                                    .transition().duration(200)
                                    .style('opacity', 1)
                                    .style("left", a + "px")     
                                    .style("top", c + "px")
                                    .style("width", 230 + "px")
                                    .text("Galeria Principal: " + justificationUserGaleria)
                                    .style("color", "#6E9EA4")
                                    .style("font-family", "Roboto")
                                    .style("font-size", '14px')
                                    d3.select(this)
                                    .transition()
                                    .style('fill', '#6E9EA4')
                                    .duration('50')
                                        .attr('opacity', '.8');
                                }
                                    
                            })
                            .on('mouseout', function (d, i) {
                                if(justificationUserGaleria != ""){
                                    d3.select('#tooltip')
                                    .style('opacity', 0)
                                    d3.select(this)
                                    .transition()
                                    .duration('50')
                                    .attr('opacity', '1');
                                }
                                else{
                                    d3.select('#tooltip')
                                    .style('opacity', 0)
                                    d3.select(this)
                                    .transition()
                                    .style('fill', 'white')
                                    .duration('50')
                                    .attr('opacity', '1');
                                }
                            })

                        innerSVG.append("path")
                            .attr("id", 'mapaVideoRoom')
                            .attr('d',mapaVideoRoom)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserVideo)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                c = parseInt(d3.select(this).attr('y')) + 100
                                if(justificationUserVideo != ""){
                                    d3.select('#tooltip')
                                    .transition().duration(200)
                                    .style('opacity', 1)
                                    .style("left", a + "px")     
                                    .style("top", b + "px")
                                    .style("width", 250 + "px")
                                    .text("Video Room\n" + "Justifica√ß√£o: " + justificationUserVideo)
                                    .style("color", "#6E9EA4")
                                    .style("font-family", "Roboto")
                                    .style("font-size", '14px')
                                    d3.select(this)
                                    .transition()
                                    .duration('50')
                                        .attr('opacity', '.8');

                                }
                                else{
                                    d3.select('#tooltip')
                                    .transition().duration(200)
                                    .style('opacity', 1)
                                    .style("left", a + "px")     
                                    .style("top", c + "px")
                                    .style("width", 200 + "px")
                                    .text("Video Room: " + justificationUserVideo)
                                    .style("color", "#6E9EA4")
                                    .style("font-family", "Roboto")
                                    .style("font-size", '14px')
                                    d3.select(this)
                                    .transition()
                                    .style('fill', '#6E9EA4')
                                    .duration('50')
                                        .attr('opacity', '.8');
                                }
                                    
                            })
                            .on('mouseout', function (d, i) {
                                if(justificationUserVideo != ""){
                                    d3.select('#tooltip')
                                    .style('opacity', 0)
                                    d3.select(this)
                                    .transition()
                                    .duration('50')
                                    .attr('opacity', '1');
                                }
                                else{
                                    d3.select('#tooltip')
                                    .style('opacity', 0)
                                    d3.select(this)
                                    .transition()
                                    .style('fill', 'white')
                                    .duration('50')
                                    .attr('opacity', '1');
                                }
                                
                            })

                        innerSVG.append("path")
                            .attr("id", 'mapaSalaOval')
                            .attr('d',mapaSalaOval)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserOval)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                c = parseInt(d3.select(this).attr('y')) + 100
                                if(justificationUserOval != ""){
                                    d3.select('#tooltip')
                                    .transition().duration(200)
                                    .style('opacity', 1)
                                    .style("left", a + "px")     
                                    .style("top", b + "px")
                                    .style("width", 250 + "px")
                                    .text("Sala Oval\n" + "Justifica√ß√£o: " + justificationUserOval)
                                    .style("color", "#6E9EA4")
                                    .style("font-family", "Roboto")
                                    .style("font-size", '14px')
                                    d3.select(this)
                                    .transition()
                                    .duration('50')
                                        .attr('opacity', '.8');

                                }
                                else{
                                    d3.select('#tooltip')
                                    .transition().duration(200)
                                    .style('opacity', 1)
                                    .style("left", a + "px")     
                                    .style("top", c + "px")
                                    .style("width", 200 + "px")
                                    .text("Sala Oval: " + justificationUserOval)
                                    .style("color", "#6E9EA4")
                                    .style("font-family", "Roboto")
                                    .style("font-size", '14px')
                                    d3.select(this)
                                    .transition()
                                    .style('fill', '#6E9EA4')
                                    .duration('50')
                                        .attr('opacity', '.8');
                                }
                                    
                            })
                            .on('mouseout', function (d, i) {
                                if(justificationUserOval != ""){
                                    d3.select('#tooltip')
                                    .style('opacity', 0)
                                    d3.select(this)
                                    .transition()
                                    .duration('50')
                                    .attr('opacity', '1');
                                }
                                else{
                                    d3.select('#tooltip')
                                    .style('opacity', 0)
                                    d3.select(this)
                                    .transition()
                                    .style('fill', 'white')
                                    .duration('50')
                                    .attr('opacity', '1');
                                }
                            })

                        innerSVG.append("path")
                            .attr("id", 'mapaProjectRoom')
                            .attr('d',mapaProjectRoom)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserProject)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                c = parseInt(d3.select(this).attr('y')) + 100
                                if(justificationUserProject != ""){
                                    d3.select('#tooltip')
                                    .transition().duration(200)
                                    .style('opacity', 1)
                                    .style("left", a + "px")     
                                    .style("top", b + "px")
                                    .style("width", 250 + "px")
                                    .text("Project Room\n" + "Justifica√ß√£o: " + justificationUserProject)
                                    .style("color", "#6E9EA4")
                                    .style("font-family", "Roboto")
                                    .style("font-size", '14px')
                                    d3.select(this)
                                    .transition()
                                    .duration('50')
                                        .attr('opacity', '.8');

                                }
                                else{
                                    d3.select('#tooltip')
                                    .transition().duration(200)
                                    .style('opacity', 1)
                                    .style("left", a + "px")     
                                    .style("top", c + "px")
                                    .style("width", 200 + "px")
                                    .text("Project Room: " + justificationUserProject)
                                    .style("color", "#6E9EA4")
                                    .style("font-family", "Roboto")
                                    .style("font-size", '14px')
                                    d3.select(this)
                                    .transition()
                                    .style('fill', '#6E9EA4')
                                    .duration('50')
                                        .attr('opacity', '.8');
                                }
                                
                                    
                            })
                            .on('mouseout', function (d, i) {
                                if(justificationUserProject != ""){
                                    d3.select('#tooltip')
                                    .style('opacity', 0)
                                    d3.select(this)
                                    .transition()
                                    .duration('50')
                                    .attr('opacity', '1');
                                }
                                else{
                                    d3.select('#tooltip')
                                    .style('opacity', 0)
                                    d3.select(this)
                                    .transition()
                                    .style('fill', 'white')
                                    .duration('50')
                                    .attr('opacity', '1');
                                }
                            })

                        innerSVG.raise()

                        svg.select("#legenda1").remove()
                        svg.select("#legenda2").remove()

                        svg.append('text')
                            .attr('id', 'legenda1')
                            .text(legendaExperienciaMenos)
                            .attr('x', 700)
                            .attr('y', 525)
                            .style("fill", "#0d4148FF")
                            .style("font-family", "Roboto")
                            .style("font-size", '14px')
        
                        svg.append('text')
                            .attr('id', 'legenda2')
                            .text(legendaExperienciaMais)
                            .attr('x', 1160)
                            .attr('y', 525)
                            .style("fill", "#0d4148FF")
                            .style("font-family", "Roboto")
                            .style("font-size", '14px')

                    }
                    if(d3.select("#g2").classed("selected")){
            
                        linearGradientV.selectAll("stop")
                        .data( colorScaleVisita.range() )
                        .enter().append("stop")
                        .attr("offset", function(d,i) { return i/(colorScaleVisita.range().length-1); })
                        .attr("stop-color", function(d) { return d; });
                        qual = "url(#linear-gradientV)"

                        //RETANGULO LEGENDA
                        svg.append("rect")
                            .attr('x', 720)
                            .attr('y', 485)
                            .attr('width', 530)
                            .attr('height', 25)
                            .style("fill", "url(#linear-gradientV)");

                        //DESENHAR MAPA
                        //EXTERIOR
                        svg.append('rect')
                            .attr("id", 'exterior')
                            .attr('x', 720)
                            .attr('y', 150)
                            .attr('width', 530)
                            .attr('height', 250)
                            .style("fill", corUserVisitaExterior)
                            .style('stroke', "black")
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 320
                                b = parseInt(d3.select(this).attr('y')) + 100
                                d3.select('#tooltip')
                                .transition().duration(200)
                                .style('opacity', 1)
                                .style("left", a + "px")     
                                .style("top", b + "px")
                                .text("Exterior do museu")
                                .style("color", "#6E9EA4")
                                .style("font-family", "Roboto")
                                .style("font-size", '14px')
                                d3.select(this)
                                .transition()
                                .duration('50')
                                        .attr('opacity', '.8');
                            })
                            .on('mouseout', function (d, i) {
                                d3.select('#tooltip')
                                .style('opacity', 0)
                                d3.select(this)
                                .transition()
                                .duration('50')
                                .attr('opacity', '1');
                            })
                

                        innerSVG.append("path")
                            .attr("id", 'mapaGaleriaPrincipal')
                            .attr('d',mapaGaleriaPrincipal)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserVisitaGaleria)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                d3.select('#tooltip')
                                .transition().duration(200)
                                .style('opacity', 1)
                                .style("left", a + "px")     
                                .style("top", b + "px")
                                .text("Galeria Principal")
                                .style("color", "#6E9EA4")
                                .style("font-family", "Roboto")
                                .style("font-size", '14px')
                                d3.select(this)
                                .transition()
                                .duration('50')
                                        .attr('opacity', '.8');
                            })
                            .on('mouseout', function (d, i) {
                                d3.select('#tooltip')
                                .style('opacity', 0)
                                d3.select(this)
                                .transition()
                                .duration('50')
                                .attr('opacity', '1');
                            })
    
                        innerSVG.append("path")
                            .attr("id", 'mapaVideoRoom')
                            .attr('d',mapaVideoRoom)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserVisitaVideo)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                d3.select('#tooltip')
                                .transition().duration(200)
                                .style('opacity', 1)
                                .style("left", a + "px")     
                                .style("top", b + "px")
                                .text("Video Room")
                                .style("color", "#6E9EA4")
                                .style("font-family", "Roboto")
                                .style("font-size", '14px')
                                d3.select(this)
                                .transition()
                                .duration('50')
                                        .attr('opacity', '.8');
                            })
                            .on('mouseout', function (d, i) {
                                d3.select('#tooltip')
                                .style('opacity', 0)
                                d3.select(this)
                                .transition()
                                .duration('50')
                                .attr('opacity', '1');
                            })
    
                        innerSVG.append("path")
                            .attr("id", 'mapaSalaOval')
                            .attr('d',mapaSalaOval)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserVisitaOval)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                d3.select('#tooltip')
                                .transition().duration(200)
                                .style('opacity', 1)
                                .style("left", a + "px")     
                                .style("top", b + "px")
                                .text("Sala Oval")
                                .style("color", "#6E9EA4")
                                .style("font-family", "Roboto")
                                .style("font-size", '14px')
                                d3.select(this)
                                .transition()
                                .duration('50')
                                        .attr('opacity', '.8');
                            })
                            .on('mouseout', function (d, i) {
                                d3.select('#tooltip')
                                .style('opacity', 0)
                                d3.select(this)
                                .transition()
                                .duration('50')
                                .attr('opacity', '1');
                            })
    
                        innerSVG.append("path")
                            .attr("id", 'mapaProjectRoom')
                            .attr('d',mapaProjectRoom)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserVisitaProject)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                d3.select('#tooltip')
                                .transition().duration(200)
                                .style('opacity', 1)
                                .style("left", a + "px")     
                                .style("top", b + "px")
                                .text("Project Room")
                                .style("color", "#6E9EA4")
                                .style("font-family", "Roboto")
                                .style("font-size", '14px')
                                d3.select(this)
                                .transition()
                                .duration('50')
                                        .attr('opacity', '.8');
                            })
                            .on('mouseout', function (d, i) {
                                d3.select('#tooltip')
                                .style('opacity', 0)
                                d3.select(this)
                                .transition()
                                .duration('50')
                                .attr('opacity', '1');
                            })

                        innerSVG.raise()

                        svg.select("#legenda1").remove()
                        svg.select("#legenda2").remove()

                        svg.append('text')
                            .attr('id', 'legenda1')
                            .text(legendaVisitaMenosUser)
                            .attr('x', 700)
                            .attr('y', 525)
                            .style("fill", "#0d4148FF")
                            .style("font-family", "Roboto")
                            .style("font-size", '14px')
        
                        svg.append('text')
                            .attr('id', 'legenda2')
                            .text(legendaVisitaMaisUser)
                            .attr('x', 1160)
                            .attr('y', 525)
                            .style("fill", "#0d4148FF")
                            .style("font-family", "Roboto")
                            .style("font-size", '14px')

                    }
                    if(d3.select("#g3").classed("selected")){
                        linearGradientF.selectAll("stop")
                        .data( colorScaleFuturo.range() )
                        .enter().append("stop")
                        .attr("offset", function(d,i) { return i/(colorScaleFuturo.range().length-1); })
                        .attr("stop-color", function(d) { return d; });
                        
                        //RETANGULO LEGENDA
                        svg.append("rect")
                            .attr('x', 720)
                            .attr('y', 485)
                            .attr('width', 530)
                            .attr('height', 25)
                            .style("fill", "url(#linear-gradientF)");

                        //DESENHAR MAPA
                        //EXTERIOR
                        svg.append('rect')
                            .attr("id", 'exterior')
                            .attr('x', 720)
                            .attr('y', 150)
                            .attr('width', 530)
                            .attr('height', 250)
                            .style("fill", corUserFutureExterior)
                            .style('stroke', "black")
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 320
                                b = parseInt(d3.select(this).attr('y')) + 100
                                d3.select('#tooltip')
                                .transition().duration(200)
                                .style('opacity', 1)
                                .style("left", a + "px")     
                                .style("top", b + "px")
                                .text("Exterior do museu")
                                .style("color", "#6E9EA4")
                                .style("font-family", "Roboto")
                                .style("font-size", '14px')
                                d3.select(this)
                                .transition()
                                .duration('50')
                                    .attr('opacity', '.8');
                            })
                            .on('mouseout', function (d, i) {
                                d3.select('#tooltip')
                                .style('opacity', 0)
                                d3.select(this)
                                .transition()
                                .duration('50')
                                .attr('opacity', '1');
                            })

        
                        //GALERIA
                        innerSVG.append("path")
                            .attr("id", 'mapaGaleriaPrincipal')
                            .attr('d',mapaGaleriaPrincipal)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserFutureGaleria)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                d3.select('#tooltip')
                                .transition().duration(200)
                                .style('opacity', 1)
                                .style("left", a + "px")     
                                .style("top", b + "px")
                                .text("Galeria Principal")
                                .style("color", "#6E9EA4")
                                .style("font-family", "Roboto")
                                .style("font-size", '14px')
                                d3.select(this)
                                .transition()
                                .duration('50')
                                        .attr('opacity', '.8');
                            })
                            .on('mouseout', function (d, i) {
                                d3.select('#tooltip')
                                .style('opacity', 0)
                                d3.select(this)
                                .transition()
                                .duration('50')
                                .attr('opacity', '1');
                            })
    
                        //VIDEO ROOM
                        innerSVG.append("path")
                            .attr("id", 'mapaVideoRoom')
                            .attr('d',mapaVideoRoom)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserFutureVideo)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                d3.select('#tooltip')
                                .transition().duration(200)
                                .style('opacity', 1)
                                .style("left", a + "px")     
                                .style("top", b + "px")
                                .text("Video Room")
                                .style("color", "#6E9EA4")
                                .style("font-family", "Roboto")
                                .style("font-size", '14px')
                                d3.select(this)
                                .transition()
                                .duration('50')
                                        .attr('opacity', '.8');
                            })
                            .on('mouseout', function (d, i) {
                                d3.select('#tooltip')
                                .style('opacity', 0)
                                d3.select(this)
                                .transition()
                                .duration('50')
                                .attr('opacity', '1');
                            })

                        //SALA OVAL
                        innerSVG.append("path")
                            .attr("id", 'mapaSalaOval')
                            .attr('d',mapaSalaOval)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserFutureOval)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                d3.select('#tooltip')
                                .transition().duration(200)
                                .style('opacity', 1)
                                .style("left", a + "px")     
                                .style("top", b + "px")
                                .text("Sala Oval")
                                .style("color", "#6E9EA4")
                                .style("font-family", "Roboto")
                                .style("font-size", '14px')
                                d3.select(this)
                                .transition()
                                .duration('50')
                                        .attr('opacity', '.8');
                            })
                            .on('mouseout', function (d, i) {
                                d3.select('#tooltip')
                                .style('opacity', 0)
                                d3.select(this)
                                .transition()
                                .duration('50')
                                .attr('opacity', '1');
                            })
                                    
                        //PROJECT ROOM
                        innerSVG.append("path")
                            .attr("id", 'mapaProjectRoom')
                            .attr('d',mapaProjectRoom)
                            .attr('x', 1030)
                            .attr('y', 150)
                            .attr("fill", corUserFutureProject)
                            .on('mouseover', function (d, i) {
                                a = parseInt(d3.select(this).attr('x')) + 5
                                b = parseInt(d3.select(this).attr('y')) + 100
                                d3.select('#tooltip')
                                .transition().duration(200)
                                .style('opacity', 1)
                                .style("left", a + "px")     
                                .style("top", b + "px")
                                .text("Project Room")
                                .style("color", "#6E9EA4")
                                .style("font-family", "Roboto")
                                .style("font-size", '14px')
                                d3.select(this)
                                .transition()
                                .duration('50')
                                        .attr('opacity', '.8');
                            })
                            .on('mouseout', function (d, i) {
                                d3.select('#tooltip')
                                .style('opacity', 0)
                                d3.select(this)
                                .transition()
                                .duration('50')
                                .attr('opacity', '1');
                            })

                        innerSVG.raise()

                        svg.select("#legenda1").remove()
                        svg.select("#legenda2").remove()

                        svg.append('text')
                            .attr('id', 'legenda1')
                            .text(legendaFutureMenosUser)
                            .attr('x', 700)
                            .attr('y', 525)
                            .style("fill", "#0d4148FF")
                            .style("font-family", "Roboto")
                            .style("font-size", '14px')
        
                        svg.append('text')
                            .attr('id', 'legenda2')
                            .text(legendaFutureMaisUser)
                            .attr('x', 1150)
                            .attr('y', 525)
                            .style("fill", "#0d4148FF")
                            .style("font-family", "Roboto")
                            .style("font-size", '14px')

                    } 
   
                }


                svg.append('text')
                    .text("Filtros para o mapa")
                    .attr('x', 700)
                    .attr('y', 25)
                    .style("fill", "#6E9EA4")
                    .style("font-weight", 800)
                    .style("font-family", "Roboto")
                    .style("font-size", '20px')



                //BOTAO EXPERIENCIA NO LOCAL
                var group1 = svg.append("g");
                group1.append('rect')
                    .attr("id", 'g1')
                    .attr('x', 710)
                    .attr('y', 40)
                    .attr('width', 150)
                    .attr('height', 25)
                    .style("fill", "#0d4148")
                    .style('stroke', "black")
                    .classed("selected", false)
                    .on('click', function(e, d){
                        //deselect as outras
                        if(d3.select("#g2").classed("selected") || d3.select("#g3").classed("selected")){
                            d3.select("#g2").classed("selected", false)
                            d3.select("#g2")
                                .style('fill', "#6E9EA4")
                            d3.select("#g3").classed("selected", false)
                            d3.select("#g3")
                                .style('fill', "#6E9EA4")
                        }
                        if (!d3.select(this).classed("selected") ){
                            d3.select(this).classed("selected", true)
                            d3.select(this)
                            .style('fill', "#6E9EA4")
                            d3.select("#colores").remove()
                                        
                        }else{
                            d3.select(this).classed("selected", false);
                            d3.select(this)
                            .style('fill', "#0d4148")
                            colorir();

                        }
                    
                    });

                group1.append('text')
                    .text("Experi√™ncia no local")
                    .attr('x', 730)
                    .attr('y', 55)
                    .style("fill", "white")
                    .style("font-weight", 800)
                    .style("font-family", "Roboto")
                    .style("font-size", '12px')


                //BOTAO SALAS MAIS VISITADAS
                var group2 = svg.append("g");
                group2.append('rect')
                    .attr("id", 'g2')
                    .attr('x', 880)
                    .attr('y', 40)
                    .attr('width', 150)
                    .attr('height', 25)
                    .style("fill", "#6E9EA4")
                    .style('stroke', "black")
                    .on('click', function(e, d){
                        //deselect as outras
                        if(!d3.select("#g1").classed("selected") || d3.select("#g3").classed("selected")){
                            d3.select("#g1").classed("selected", true)
                            d3.select("#g1")
                                .style('fill', "#6E9EA4")
                            d3.select("#g3").classed("selected", false)
                            d3.select("#g3")
                                .style('fill', "#6E9EA4")
                        }
                        if (!d3.select(this).classed("selected") ){
                            d3.select(this).classed("selected", true)
                            d3.select(this)
                            .style('fill', "#0d4148")
                            colorir();
      
    
                        }else{
                            d3.select(this).classed("selected", false);
                            d3.select(this)
                            .style('fill', "#6E9EA4")
                            d3.select("#colores").remove()

                            
                        }

                        
                    
                    });


                group2.append('text')
                    .text("Locais visitados")
                    .attr('x', 910)
                    .attr('y', 55)
                    .style("fill", "white")
                    .style("font-weight", 800)
                    .style("font-family", "Roboto")
                    .style("font-size", '12px')


                //BOTAO FUTURAS CONSULTAS
                var group3 = svg.append("g");

                group3.append('rect')
                    .attr("id", 'g3')
                    .attr('x', 1050)
                    .attr('y', 40)
                    .attr('width', 195)
                    .attr('height', 25)
                    .style("fill", "#6E9EA4")
                    .style('stroke', "black")
                    .on('click', function(e, d){

                        if(!d3.select("#g1").classed("selected") || d3.select("#g2").classed("selected")){
                            d3.select("#g1").classed("selected", true)
                            d3.select("#g1")
                                .style('fill', "#6E9EA4")
                            d3.select("#g2").classed("selected", false)
                            d3.select("#g2")
                                .style('fill', "#6E9EA4")
                        }
                        
                        if (!d3.select(this).classed("selected") ){
                            d3.select(this).classed("selected", true)
                            d3.select(this)
                            .style('fill', "#0d4148")   
                            colorir();

                        }else{
                            d3.select(this).classed("selected", false);
                            d3.select(this)
                            .style('fill', "#6E9EA4")
                            d3.select("#colores").remove()

                        }
                        
                    });

                group3.append('text')
                .text("Salas para futuras consultas")
                .attr('x', 1070)
                .attr('y', 55)
                .style("fill", "white")
                .style("font-weight", 800)
                .style("font-family", "Roboto")
                .style("font-size", '12px')



                //legenda mapa
                svg.append('text')
                    .text("Legenda")
                    .attr('x', 700)
                    .attr('y', 475)
                    .style("fill", "#6E9EA4")
                    .style("font-weight", 800)
                    .style("font-family", "Roboto")
                    .style("font-size", '20px')

                svg.append('text')
                    .attr('id', 'legenda1')
                    .text(legendaExperienciaMenos)
                    .attr('x', 700)
                    .attr('y', 525)
                    .style("fill", "#0d4148FF")
                    .style("font-family", "Roboto")
                    .style("font-size", '14px')

                svg.append('text')
                    .attr('id', 'legenda2')
                    .text(legendaExperienciaMais)
                    .attr('x', 1150)
                    .attr('y', 525)
                    .style("fill", "#0d4148FF")
                    .style("font-family", "Roboto")
                    .style("font-size", '14px')




            }
    )


        
}



